> INFO:
Server is running on:8000!
> INFO:
Server is running on:8000!
API RECV: login
{ num: 1 }
API RECV: login
{ num: 1 }
API RECV: login
{ num: 1 }
API RECV: login
{ num: 1 }
API RECV: login
{ num: 1 }
API RECV: login
{ num: 0 }
API RECV: login
{ num: 1 }
API RECV: login
{ num: 1 }
API RECV: login
{ num: 1 }
API RECV: login
{ num: 1 }
API RECV: login
{ num: 1 }
API RECV: login
{ num: 1 }
> INFO:
Server is running on:8000!
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475046533595 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='18261383871'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '江苏',
    idNumber: '333333',
    phoneNumber: '1232456',
    email: 'asdasdas',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475046755797 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: cai
API RECV: zan
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
[ RowDataPacket { zan: 5 } ]
API RECV: questionlist
API RECV: question
> ERR:
Error: ER_TRUNCATED_WRONG_VALUE_FOR_FIELD: Incorrect integer value: '' for column 'gold1' at row 1
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:232:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 } ]
API RECV: zan
API RECV: cai
[ RowDataPacket { zan: 5 } ]
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: question
insert into userquestion(questionTitle,userId,gold1,directionId,questionDate,questionContent) values ('我的问题','49','20','1','2016-9-28 15时14分18秒','')
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='18261383871'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '江苏',
    idNumber: '333333',
    phoneNumber: '1232456',
    email: 'asdasdas',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 } ]
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: zan
API RECV: cai
[ RowDataPacket { zan: 5 } ]
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: register
> ERR:
Error: 你的姓名格式不合法！
    at Error (native)
    at /xmgc_main/my_modules/fns.js:264:28
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._fns.getUidByregister (/xmgc_main/my_modules/fns.js:257:14)
    at /xmgc_main/my_modules/rotr.js:94:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '47', phone: '18039300963', nick: 'guozhen' },
  time: 1475056065831 }
API RECV: reg
{ id: '47', phone: '18039300963', nick: 'guozhen' }
insert into userdata set  userId='47', userName='18039300963'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '47' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: questionlist
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: topicPage
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: fansPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: question
insert into userquestion(questionTitle,userId,gold1,directionId,questionDate,questionContent) values ('刘兆朋是不是猥琐男','47','1000000','1','2016-9-28 18时24分7秒','')
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: question1
API RECV: answerlist
数据库查询数据 []
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: question1
API RECV: answerlist
数据库查询数据 []
API RECV: zan
API RECV: questionlist
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: question1
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: answerlist
数据库查询数据 []
API RECV: zan
API RECV: cai
[ RowDataPacket { zan: 5 } ]
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: cai
API RECV: zan
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
[ RowDataPacket { zan: 5 } ]
API RECV: questionlist
API RECV: cai
API RECV: zan
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
[ RowDataPacket { zan: 5 } ]
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '26', phone: '18994539246', nick: 'tong' },
  time: 1475060253051 }
API RECV: reg
{ id: '26', phone: '18994539246', nick: 'tong' }
insert into userdata set  userId='26', userName='18994539246'
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('是的是的，我也这么认为
','2016-9-28 18时58分11秒','26','32')
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 21,
    resContent: '是的是的，我也这么认为\n',
    userName: '18994539246',
    resDate: '2016-9-28 18时58分11秒' } ]
API RECV: question1
API RECV: question
> ERR:
Error: ER_TRUNCATED_WRONG_VALUE_FOR_FIELD: Incorrect integer value: '' for column 'gold1' at row 1
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:232:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: question
insert into userquestion(questionTitle,userId,gold1,directionId,questionDate,questionContent) values ('刘兆鹏','26','1000','2','2016-9-28 19时1分26秒','')
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: topicPage
API RECV: question1
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: questionlist
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475062679478 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475062792027 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
API RECV: cai
[ RowDataPacket { zan: 5 } ]
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: topicPage
API RECV: questionlist
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 4,
    resContent: 'ddd',
    userName: '18261383871',
    resDate: null } ]
API RECV: question1
API RECV: settingPage
select * from userdata where userName='18261383871'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '江苏',
    idNumber: '333333',
    phoneNumber: '1232456',
    email: 'asdasdas',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 4,
    resContent: 'ddd',
    userName: '18261383871',
    resDate: null } ]
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475065842186 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='18261383871'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '江苏',
    idNumber: '333333',
    phoneNumber: '1232456',
    email: 'asdasdas',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='18261383871'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '江苏',
    idNumber: '333333',
    phoneNumber: '1232456',
    email: 'asdasdas',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475065920354 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: zan
API RECV: cai
[ RowDataPacket { zan: 5 } ]
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: register
> ERR:
Error: 你的姓名格式不合法！
    at Error (native)
    at /xmgc_main/my_modules/fns.js:264:28
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._fns.getUidByregister (/xmgc_main/my_modules/fns.js:257:14)
    at /xmgc_main/my_modules/rotr.js:94:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
API RECV: register
提示:电话号码已经被注册，您可以直接使用这个电话号码登陆.
{ code: 8788,
  text: '电话号码已经被注册，您可以直接使用这个电话号码登陆.',
  info: 'API proc failed:getPhoneRegCode.',
  time: 1475066066841 }
API RECV: register2
> ERR:
Error: 你的验证码格式不合法！
    at Error (native)
    at /xmgc_main/my_modules/fns.js:302:31
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._fns.getUidByregister2 (/xmgc_main/my_modules/fns.js:292:14)
    at /xmgc_main/my_modules/rotr.js:105:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
API RECV: register2
提示:验证码格式错误.
{ code: 8788,
  text: '验证码格式错误.',
  info: 'API proc failed:regByPhone.',
  time: 1475066074972 }
API RECV: register2
提示:验证码格式错误.
{ code: 8788,
  text: '验证码格式错误.',
  info: 'API proc failed:regByPhone.',
  time: 1475066080332 }
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475066135500 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: question1
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '22', phone: '18861304637' },
  time: 1475066580350 }
API RECV: reg
{ id: '22', phone: '18861304637' }
insert into userdata set  userId='22', userName='18861304637'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: questionlist
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: question1
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: zan
API RECV: cai
[ RowDataPacket { zan: 5 } ]
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: questionlist
API RECV: zan
[ RowDataPacket { zan: 5 } ]
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '22', phone: '18861304637' },
  time: 1475067333939 }
API RECV: reg
{ id: '22', phone: '18861304637' }
insert into userdata set  userId='22', userName='18861304637'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: zan
API RECV: cai
[ RowDataPacket { zan: 5 } ]
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '22', phone: '18861304637' },
  time: 1475067610115 }
API RECV: reg
{ id: '22', phone: '18861304637' }
insert into userdata set  userId='22', userName='18861304637'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: zan
API RECV: cai
[ RowDataPacket { zan: 5 } ]
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: question1
API RECV: question111
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:432:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: question111
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:432:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: question1
API RECV: questionlist
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: question1
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: question1
API RECV: question111
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:432:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: question111
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:432:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: questionlist
API RECV: concernPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:489:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.concernPage (/xmgc_main/my_modules/rotr.js:488:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: fansPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:509:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.fansPage (/xmgc_main/my_modules/rotr.js:508:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:225
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: responsePage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:474:224
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.responsePage (/xmgc_main/my_modules/rotr.js:472:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: concernPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:489:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.concernPage (/xmgc_main/my_modules/rotr.js:488:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: fansPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:509:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.fansPage (/xmgc_main/my_modules/rotr.js:508:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:225
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: responsePage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:474:224
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.responsePage (/xmgc_main/my_modules/rotr.js:472:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: concernPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:489:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.concernPage (/xmgc_main/my_modules/rotr.js:488:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: concernPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:489:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.concernPage (/xmgc_main/my_modules/rotr.js:488:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '47', phone: '18039300963', nick: 'guozhen' },
  time: 1475068066529 }
API RECV: reg
{ id: '47', phone: '18039300963', nick: 'guozhen' }
insert into userdata set  userId='47', userName='18039300963'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '47' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: question1
API RECV: question111
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:432:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: questionlist
API RECV: questionlist
API RECV: questionlist
API RECV: question
insert into userquestion(questionTitle,userId,gold1,directionId,questionDate,questionContent) values ('九点了！','47','30','2','2016-9-28 21时8分42秒','')
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    questionId: 3 } ]
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475068173184 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: responsePage
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 } ]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 } ]
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 } ]
API RECV: questionlist
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 } ]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475068254875 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: settingPage
select * from userdata where userName='18261383871'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '江苏',
    idNumber: '333333',
    phoneNumber: '1232456',
    email: 'asdasdas',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: questionlist
API RECV: question
insert into userquestion(questionTitle,userId,gold1,directionId,questionDate,questionContent) values ('张艳菲','49','200','1','2016-9-28 21时12分11秒','')
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '22', phone: '18861304637' },
  time: 1475068341036 }
API RECV: reg
{ id: '22', phone: '18861304637' }
insert into userdata set  userId='22', userName='18861304637'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: cai
API RECV: zan
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
[ RowDataPacket { zan: 5 } ]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: question1
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: concernPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:489:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.concernPage (/xmgc_main/my_modules/rotr.js:488:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: fansPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:509:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.fansPage (/xmgc_main/my_modules/rotr.js:508:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:225
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: responsePage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:474:224
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.responsePage (/xmgc_main/my_modules/rotr.js:472:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: response
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:207:160
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.response (/xmgc_main/my_modules/rotr.js:200:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: question1
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: response
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:207:160
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.response (/xmgc_main/my_modules/rotr.js:200:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: zan
API RECV: cai
[ RowDataPacket { zan: 5 } ]
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: concernPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:489:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.concernPage (/xmgc_main/my_modules/rotr.js:488:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '47', phone: '18039300963', nick: 'guozhen' },
  time: 1475068537527 }
API RECV: reg
{ id: '47', phone: '18039300963', nick: 'guozhen' }
insert into userdata set  userId='47', userName='18039300963'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '47' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: question1
API RECV: settingPage
select * from userdata where userName='18039300963'
[ RowDataPacket {
    userId: 47,
    userPwd: null,
    userName: '18039300963',
    sex: '男',
    address: '河南',
    idNumber: '789065778',
    phoneNumber: '89066790ppp876',
    email: '自己才',
    headImage: null,
    company: '微软',
    selfIntroduction: '算了',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: fansPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' } ]
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('','2016-9-28 21时14分20秒','47','1')
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    questionId: 3 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    questionId: 3 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('','2016-9-28 21时14分30秒','47','1')
API RECV: questionlist
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    questionId: 3 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    questionId: 3 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: response
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:207:160
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.response (/xmgc_main/my_modules/rotr.js:200:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:225
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:225
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:225
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:225
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: fansPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:509:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.fansPage (/xmgc_main/my_modules/rotr.js:508:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: concernPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:489:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.concernPage (/xmgc_main/my_modules/rotr.js:488:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' } ]
API RECV: question1
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: responsePage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:474:224
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.responsePage (/xmgc_main/my_modules/rotr.js:472:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:225
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: fansPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:509:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.fansPage (/xmgc_main/my_modules/rotr.js:508:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: concernPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:489:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.concernPage (/xmgc_main/my_modules/rotr.js:488:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '47', phone: '18039300963', nick: 'guozhen' },
  time: 1475068654415 }
API RECV: reg
{ id: '47', phone: '18039300963', nick: 'guozhen' }
insert into userdata set  userId='47', userName='18039300963'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '47' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    questionId: 3 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    questionId: 3 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    questionId: 3 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: fansPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    questionId: 3 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: fansPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    questionId: 3 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' } ]
API RECV: question1
API RECV: settingPage
select * from userdata where userName='18039300963'
[ RowDataPacket {
    userId: 47,
    userPwd: null,
    userName: '18039300963',
    sex: '男',
    address: '河南',
    idNumber: '789065778',
    phoneNumber: '89066790ppp876',
    email: '自己才',
    headImage: null,
    company: '微软',
    selfIntroduction: '算了',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    questionId: 3 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    questionId: 3 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: fansPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    questionId: 3 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='18039300963'
[ RowDataPacket {
    userId: 47,
    userPwd: null,
    userName: '18039300963',
    sex: '男',
    address: '河南',
    idNumber: '789065778',
    phoneNumber: '89066790ppp876',
    email: '自己才',
    headImage: null,
    company: '微软',
    selfIntroduction: '算了',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    questionId: 3 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' } ]
API RECV: question1
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '22', phone: '18861304637' },
  time: 1475069115494 }
API RECV: reg
{ id: '22', phone: '18861304637' }
insert into userdata set  userId='22', userName='18861304637'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' } ]
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: topicPage
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' } ]
API RECV: response
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:207:160
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.response (/xmgc_main/my_modules/rotr.js:200:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' } ]
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' } ]
API RECV: question1
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' } ]
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '22', phone: '18861304637' },
  time: 1475069536106 }
API RECV: reg
{ id: '22', phone: '18861304637' }
insert into userdata set  userId='22', userName='18861304637'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' } ]
API RECV: question1
API RECV: question111
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:432:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475069546993 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' } ]
API RECV: question1
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('大师大师的','2016-9-28 21时32分33秒','49','1')
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒' } ]
API RECV: question1
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: settingPage
select * from userdata where userName='18261383871'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '江苏',
    idNumber: '333333',
    phoneNumber: '1232456',
    email: 'asdasdas',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒' } ]
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475070000254 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475070162717 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: questionlist
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:225
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:225
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:225
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: fansPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:509:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.fansPage (/xmgc_main/my_modules/rotr.js:508:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: responsePage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:474:224
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.responsePage (/xmgc_main/my_modules/rotr.js:472:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:225
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: responsePage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:474:224
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.responsePage (/xmgc_main/my_modules/rotr.js:472:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:225
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475070340986 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: responsePage
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='18261383871'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '江苏',
    idNumber: '333333',
    phoneNumber: '1232456',
    email: 'asdasdas',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: responsePage
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    questionId: 4 },
  RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    questionId: 1 } ]
API RECV: questionlist
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:225
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: responsePage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:474:224
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.responsePage (/xmgc_main/my_modules/rotr.js:472:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒' } ]
API RECV: question111
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:432:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒' } ]
API RECV: question1
API RECV: reg
undefined
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:66:61
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.reg (/xmgc_main/my_modules/rotr.js:60:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: concernPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:489:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.concernPage (/xmgc_main/my_modules/rotr.js:488:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: fansPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:509:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.fansPage (/xmgc_main/my_modules/rotr.js:508:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '22', phone: '18861304637' },
  time: 1475070910116 }
API RECV: reg
{ id: '22', phone: '18861304637' }
insert into userdata set  userId='22', userName='18861304637'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒' },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒' },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒' },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒' },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒' },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒' },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒' },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒' },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒' } ]
API RECV: question1
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '22', phone: '18861304637' },
  time: 1475071059134 }
API RECV: reg
{ id: '22', phone: '18861304637' }
insert into userdata set  userId='22', userName='18861304637'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
/xmgc_main/my_modules/fns.js:301
        if (!phone ) throw Error('你的手机号格式不合法��?);
                                 ^^^^^^^^^^^^^^^^

SyntaxError: Unexpected token ILLEGAL
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:373:25)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
    at Module.require (module.js:353:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/xmgc_main/_app.js:21:15)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
/xmgc_main/my_modules/fns.js:301
        if (!phone ) throw Error('你的手机号格式不合法��?);
                                 ^^^^^^^^^^^^^^^^

SyntaxError: Unexpected token ILLEGAL
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:373:25)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
    at Module.require (module.js:353:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/xmgc_main/_app.js:21:15)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
/xmgc_main/my_modules/fns.js:301
        if (!phone ) throw Error('你的手机号格式不合法��?);
                                 ^^^^^^^^^^^^^^^^

SyntaxError: Unexpected token ILLEGAL
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:373:25)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
    at Module.require (module.js:353:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/xmgc_main/_app.js:21:15)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
/xmgc_main/my_modules/fns.js:301
        if (!phone ) throw Error('你的手机号格式不合法��?);
                                 ^^^^^^^^^^^^^^^^

SyntaxError: Unexpected token ILLEGAL
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:373:25)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
    at Module.require (module.js:353:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/xmgc_main/_app.js:21:15)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
/xmgc_main/my_modules/fns.js:301
        if (!phone ) throw Error('你的手机号格式不合法��?);
                                 ^^^^^^^^^^^^^^^^

SyntaxError: Unexpected token ILLEGAL
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:373:25)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
    at Module.require (module.js:353:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/xmgc_main/_app.js:21:15)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
/xmgc_main/my_modules/fns.js:301
        if (!phone ) throw Error('你的手机号格式不合法��?);
                                 ^^^^^^^^^^^^^^^^

SyntaxError: Unexpected token ILLEGAL
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:373:25)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
    at Module.require (module.js:353:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/xmgc_main/_app.js:21:15)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
/xmgc_main/my_modules/fns.js:301
        if (!phone ) throw Error('你的手机号格式不合法��?);
                                 ^^^^^^^^^^^^^^^^

SyntaxError: Unexpected token ILLEGAL
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:373:25)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
    at Module.require (module.js:353:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/xmgc_main/_app.js:21:15)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
/xmgc_main/my_modules/fns.js:301
        if (!phone ) throw Error('你的手机号格式不合法��?);
                                 ^^^^^^^^^^^^^^^^

SyntaxError: Unexpected token ILLEGAL
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:373:25)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
    at Module.require (module.js:353:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/xmgc_main/_app.js:21:15)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
/xmgc_main/my_modules/fns.js:301
        if (!phone ) throw Error('你的手机号格式不合法��?);
                                 ^^^^^^^^^^^^^^^^

SyntaxError: Unexpected token ILLEGAL
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:373:25)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
    at Module.require (module.js:353:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/xmgc_main/_app.js:21:15)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
/xmgc_main/my_modules/fns.js:301
        if (!phone ) throw Error('你的手机号格式不合法��?);
                                 ^^^^^^^^^^^^^^^^

SyntaxError: Unexpected token ILLEGAL
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:373:25)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
    at Module.require (module.js:353:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/xmgc_main/_app.js:21:15)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
/xmgc_main/my_modules/fns.js:301
        if (!phone ) throw Error('你的手机号格式不合法��?);
                                 ^^^^^^^^^^^^^^^^

SyntaxError: Unexpected token ILLEGAL
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:373:25)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
    at Module.require (module.js:353:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/xmgc_main/_app.js:21:15)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
> INFO:
Server is running on:8000!
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 6,
    cai: 1 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 2,
    cai: 0 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 6,
    cai: 1 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 2,
    cai: 0 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 7,
    cai: 1 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 2,
    cai: 0 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: concernPage
select * from concern where userId='22'
[ RowDataPacket {
    id: 1,
    userId: 22,
    concernId: 34,
    fansId: 47,
    concernDate: Tue Aug 02 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 3, userId: 22, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: fansPage
select * from concern where userId='22'
[ RowDataPacket {
    id: 1,
    userId: 22,
    concernId: 34,
    fansId: 47,
    concernDate: Tue Aug 02 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 3, userId: 22, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '121',
    questionDate: '2016-9-27 16时23分48秒',
    gold1: 11 },
  RowDataPacket {
    questionTitle: '世界末日是什么时候',
    questionDate: '2016-9-28 8时58分44秒',
    gold1: 23 },
  RowDataPacket {
    questionTitle: '1212',
    questionDate: '2016-9-28 9时41分53秒',
    gold1: 2 },
  RowDataPacket {
    questionTitle: 'dsfs',
    questionDate: '2016-9-28 11时19分37秒',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '211332123333',
    questionDate: '2016-9-28 11时35分23秒',
    gold1: 11 },
  RowDataPacket {
    questionTitle: '你猜我是谁',
    questionDate: '2016-9-28 20时7分47秒',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '我去饿',
    questionDate: '2016-9-28 20时8分14秒',
    gold1: 6 } ]
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '李还乡好开心啊',
    questionDate: '2016-09-27 00:00:00',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '这题怎么做？',
    questionDate: '2016-9-27 15:33:5',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '这题复杂了',
    questionDate: '2016-9-27 15时35分21秒',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '哈哈哈哈哈',
    questionDate: '2016-9-27 16时8分44秒',
    gold1: 1222 },
  RowDataPacket {
    questionTitle: 'ssss',
    questionDate: '2016-9-27 16时13分53秒',
    gold1: 222 },
  RowDataPacket {
    questionTitle: '11111',
    questionDate: '2016-9-27 16时16分21秒',
    gold1: 222 },
  RowDataPacket {
    questionTitle: 'ssasda',
    questionDate: '2016-9-27 16时50分4秒',
    gold1: 1231 },
  RowDataPacket {
    questionTitle: 'html',
    questionDate: '2016-9-27 17时32分57秒',
    gold1: 1 },
  RowDataPacket {
    questionTitle: '什么鬼',
    questionDate: '2016-9-28 10时37分21秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '222',
    questionDate: '2016-9-28 10时53分16秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '加加加',
    questionDate: '2016-9-28 11时0分17秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '阿萨斯',
    questionDate: '2016-9-28 11时4分55秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啊实打实大发生的发生',
    questionDate: '2016-9-28 11时11分33秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分34秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分41秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分45秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '湿哒哒',
    questionDate: '2016-9-28 11时30分29秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '啦啦啦啦啦',
    questionDate: '2016-9-28 11时37分50秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '我的问题',
    questionDate: '2016-9-28 15时14分18秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '张艳菲',
    questionDate: '2016-9-28 21时12分11秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '你多福多寿',
    questionDate: '2016-9-29 9时44分10秒',
    gold1: 20 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ddd', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '大师大师的', userId: 49 } ]
API RECV: questionlist
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ddd', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '大师大师的', userId: 49 } ]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ddd', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '大师大师的', userId: 49 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ddd', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '大师大师的', userId: 49 } ]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: questionlist
API RECV: login1
> ERR:
TypeError: _fns.getUidByLogin is not a function
    at /xmgc_main/my_modules/rotr.js:83:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.login1 (/xmgc_main/my_modules/rotr.js:82:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '李还乡好开心啊',
    questionDate: '2016-09-27 00:00:00',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '这题怎么做？',
    questionDate: '2016-9-27 15:33:5',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '这题复杂了',
    questionDate: '2016-9-27 15时35分21秒',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '哈哈哈哈哈',
    questionDate: '2016-9-27 16时8分44秒',
    gold1: 1222 },
  RowDataPacket {
    questionTitle: 'ssss',
    questionDate: '2016-9-27 16时13分53秒',
    gold1: 222 },
  RowDataPacket {
    questionTitle: '11111',
    questionDate: '2016-9-27 16时16分21秒',
    gold1: 222 },
  RowDataPacket {
    questionTitle: 'ssasda',
    questionDate: '2016-9-27 16时50分4秒',
    gold1: 1231 },
  RowDataPacket {
    questionTitle: 'html',
    questionDate: '2016-9-27 17时32分57秒',
    gold1: 1 },
  RowDataPacket {
    questionTitle: '什么鬼',
    questionDate: '2016-9-28 10时37分21秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '222',
    questionDate: '2016-9-28 10时53分16秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '加加加',
    questionDate: '2016-9-28 11时0分17秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '阿萨斯',
    questionDate: '2016-9-28 11时4分55秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啊实打实大发生的发生',
    questionDate: '2016-9-28 11时11分33秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分34秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分41秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分45秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '湿哒哒',
    questionDate: '2016-9-28 11时30分29秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '啦啦啦啦啦',
    questionDate: '2016-9-28 11时37分50秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '我的问题',
    questionDate: '2016-9-28 15时14分18秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '张艳菲',
    questionDate: '2016-9-28 21时12分11秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '你多福多寿',
    questionDate: '2016-9-29 9时44分10秒',
    gold1: 20 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ddd', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '大师大师的', userId: 49 } ]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: login1
> ERR:
TypeError: _fns.getUidByLogin is not a function
    at /xmgc_main/my_modules/rotr.js:83:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.login1 (/xmgc_main/my_modules/rotr.js:82:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: login1
> ERR:
TypeError: _fns.getUidByLogin is not a function
    at /xmgc_main/my_modules/rotr.js:83:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.login1 (/xmgc_main/my_modules/rotr.js:82:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: questionlist
API RECV: questionlist
API RECV: questionlist
API RECV: reg
{ id: '34', phone: '155******20', nick: 'lihx' }
insert into userdata set  userId='34', userName='155******20'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '34' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
{ id: '34', phone: '155******20', nick: 'lihx' }
insert into userdata set  userId='34', userName='155******20'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '34' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '嗯嗯嗯嗯嗯嗯',
    questionDate: '2016-9-28 9时40分40秒',
    gold1: 60 },
  RowDataPacket {
    questionTitle: '中不',
    questionDate: '2016-9-28 10时44分23秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: 'sadfghjh',
    questionDate: '2016-9-28 10时45分56秒',
    gold1: 20 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'bbb', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '谁动了我的数据库', userId: 49 } ]
API RECV: fansPage
select * from concern where userId='34'
[ RowDataPacket { id: 5, userId: 34, concernId: 22, fansId: 65, concernDate: null } ]
API RECV: concernPage
select * from concern where userId='34'
[ RowDataPacket { id: 5, userId: 34, concernId: 22, fansId: 65, concernDate: null } ]
API RECV: settingPage
select * from userdata where userName='155******20'
[]
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: login1
> ERR:
TypeError: _fns.getUidByLogin is not a function
    at /xmgc_main/my_modules/rotr.js:83:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.login1 (/xmgc_main/my_modules/rotr.js:82:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
> INFO:
Server is running on:8000!
> INFO:
Server is running on:8000!
API RECV: login1
> ERR:
TypeError: _fns.getUidByLogin is not a function
    at /xmgc_main/my_modules/rotr.js:83:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.login1 (/xmgc_main/my_modules/rotr.js:82:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 7,
    cai: 1 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 2,
    cai: 0 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 7,
    cai: 1 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 7,
    cai: 1 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: settingPage
select * from userdata where userName='188******37'
[]
API RECV: login1
> ERR:
TypeError: _fns.getUidByLogin is not a function
    at /xmgc_main/my_modules/rotr.js:83:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.login1 (/xmgc_main/my_modules/rotr.js:82:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: cai
> ERR:
Error: ER_NO_SUCH_TABLE: Table 'mydb.expertsres' doesn't exist
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:418:26
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: questionlist
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 7,
    cai: 1 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: login1
> ERR:
TypeError: _fns.getUidByLogin is not a function
    at /xmgc_main/my_modules/rotr.js:83:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.login1 (/xmgc_main/my_modules/rotr.js:82:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: reg
{ id: '47', phone: '180******63', nick: 'guozhen' }
insert into userdata set  userId='47', userName='180******63'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '47' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: questionlist
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='180******63'
[]
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: fansPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '儿童体验',
    questionDate: '2016-9-28 18时11分49秒',
    gold1: 22 },
  RowDataPacket {
    questionTitle: '刘兆朋是不是猥琐男',
    questionDate: '2016-9-28 18时24分7秒',
    gold1: 1000000 },
  RowDataPacket {
    questionTitle: '九点了！',
    questionDate: '2016-9-28 21时8分42秒',
    gold1: 30 } ]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 7,
    cai: 1 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='180******63'
[]
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 7,
    cai: 1 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ccc', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 } ]
API RECV: questionlist
API RECV: fansPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ccc', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ccc', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ccc', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 } ]
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ccc', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 } ]
API RECV: settingPage
select * from userdata where userName='180******63'
[]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
> INFO:
Server is running on:8000!
> INFO:
Server is running on:8000!
API RECV: login1
> ERR:
TypeError: _fns.getUidByLogin is not a function
    at /xmgc_main/my_modules/rotr.js:83:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.login1 (/xmgc_main/my_modules/rotr.js:82:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: login1
> ERR:
TypeError: _fns.getUidByLogin is not a function
    at /xmgc_main/my_modules/rotr.js:83:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.login1 (/xmgc_main/my_modules/rotr.js:82:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:100
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:100
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: concernPage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:490:63
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.concernPage (/xmgc_main/my_modules/rotr.js:489:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: responsePage
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:474:239
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.responsePage (/xmgc_main/my_modules/rotr.js:472:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: myquestion
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:458:100
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.myquestion (/xmgc_main/my_modules/rotr.js:456:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: reg
{ id: '47', phone: '180******63', nick: 'guozhen' }
insert into userdata set  userId='47', userName='180******63'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '47' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '儿童体验',
    questionDate: '2016-9-28 18时11分49秒',
    gold1: 22 },
  RowDataPacket {
    questionTitle: '刘兆朋是不是猥琐男',
    questionDate: '2016-9-28 18时24分7秒',
    gold1: 1000000 },
  RowDataPacket {
    questionTitle: '九点了！',
    questionDate: '2016-9-28 21时8分42秒',
    gold1: 30 } ]
API RECV: fansPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: fansPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '儿童体验',
    questionDate: '2016-9-28 18时11分49秒',
    gold1: 22 },
  RowDataPacket {
    questionTitle: '刘兆朋是不是猥琐男',
    questionDate: '2016-9-28 18时24分7秒',
    gold1: 1000000 },
  RowDataPacket {
    questionTitle: '九点了！',
    questionDate: '2016-9-28 21时8分42秒',
    gold1: 30 } ]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: settingPage
select * from userdata where userName='180******63'
[]
> INFO:
Server is running on:8000!
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '22', phone: '18861304637' },
  time: 1475114844908 }
API RECV: reg
{ id: '22', phone: '18861304637' }
insert into userdata set  userId='22', userName='18861304637'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 7,
    cai: 2 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 1 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: settingPage
select * from userdata where userName='18861304637'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '18861304637',
    sex: '男',
    address: '啊啊啊',
    idNumber: '11111',
    phoneNumber: '111',
    email: '1111',
    headImage: null,
    company: '1111',
    selfIntroduction: '1111',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '22', phone: '18861304637' },
  time: 1475114878244 }
API RECV: reg
{ id: '22', phone: '18861304637' }
insert into userdata set  userId='22', userName='18861304637'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 7,
    cai: 2 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 1 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 8,
    cai: 2 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 1 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 } ]
API RECV: caicai
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 8,
    cai: 3 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 1 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '李还乡好开心啊',
    questionDate: '2016-09-27 00:00:00',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '这题怎么做？',
    questionDate: '2016-9-27 15:33:5',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '这题复杂了',
    questionDate: '2016-9-27 15时35分21秒',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '哈哈哈哈哈',
    questionDate: '2016-9-27 16时8分44秒',
    gold1: 1222 },
  RowDataPacket {
    questionTitle: 'ssss',
    questionDate: '2016-9-27 16时13分53秒',
    gold1: 222 },
  RowDataPacket {
    questionTitle: '11111',
    questionDate: '2016-9-27 16时16分21秒',
    gold1: 222 },
  RowDataPacket {
    questionTitle: 'ssasda',
    questionDate: '2016-9-27 16时50分4秒',
    gold1: 1231 },
  RowDataPacket {
    questionTitle: 'html',
    questionDate: '2016-9-27 17时32分57秒',
    gold1: 1 },
  RowDataPacket {
    questionTitle: '什么鬼',
    questionDate: '2016-9-28 10时37分21秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '222',
    questionDate: '2016-9-28 10时53分16秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '加加加',
    questionDate: '2016-9-28 11时0分17秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '阿萨斯',
    questionDate: '2016-9-28 11时4分55秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啊实打实大发生的发生',
    questionDate: '2016-9-28 11时11分33秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分34秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分41秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分45秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '湿哒哒',
    questionDate: '2016-9-28 11时30分29秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '啦啦啦啦啦',
    questionDate: '2016-9-28 11时37分50秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '我的问题',
    questionDate: '2016-9-28 15时14分18秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '张艳菲',
    questionDate: '2016-9-28 21时12分11秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '你多福多寿',
    questionDate: '2016-9-29 9时44分10秒',
    gold1: 20 } ]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ddd', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '大师大师的', userId: 49 } ]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475114914530 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='18261383871'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '江苏',
    idNumber: '333333',
    phoneNumber: '1232456',
    email: 'asdasdas',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '李还乡好开心啊',
    questionDate: '2016-09-27 00:00:00',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '这题怎么做？',
    questionDate: '2016-9-27 15:33:5',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '这题复杂了',
    questionDate: '2016-9-27 15时35分21秒',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '哈哈哈哈哈',
    questionDate: '2016-9-27 16时8分44秒',
    gold1: 1222 },
  RowDataPacket {
    questionTitle: 'ssss',
    questionDate: '2016-9-27 16时13分53秒',
    gold1: 222 },
  RowDataPacket {
    questionTitle: '11111',
    questionDate: '2016-9-27 16时16分21秒',
    gold1: 222 },
  RowDataPacket {
    questionTitle: 'ssasda',
    questionDate: '2016-9-27 16时50分4秒',
    gold1: 1231 },
  RowDataPacket {
    questionTitle: 'html',
    questionDate: '2016-9-27 17时32分57秒',
    gold1: 1 },
  RowDataPacket {
    questionTitle: '什么鬼',
    questionDate: '2016-9-28 10时37分21秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '222',
    questionDate: '2016-9-28 10时53分16秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '加加加',
    questionDate: '2016-9-28 11时0分17秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '阿萨斯',
    questionDate: '2016-9-28 11时4分55秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啊实打实大发生的发生',
    questionDate: '2016-9-28 11时11分33秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分34秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分41秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分45秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '湿哒哒',
    questionDate: '2016-9-28 11时30分29秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '啦啦啦啦啦',
    questionDate: '2016-9-28 11时37分50秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '我的问题',
    questionDate: '2016-9-28 15时14分18秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '张艳菲',
    questionDate: '2016-9-28 21时12分11秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '你多福多寿',
    questionDate: '2016-9-29 9时44分10秒',
    gold1: 20 } ]
API RECV: questionlist
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 8,
    cai: 3 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 1 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ddd', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '大师大师的', userId: 49 } ]
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
{ id: '34', phone: '155******20', nick: 'lihx' }
insert into userdata set  userId='34', userName='155******20'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '34' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='34'
[ RowDataPacket { id: 5, userId: 34, concernId: 22, fansId: 65, concernDate: null } ]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'bbb', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '谁动了我的数据库', userId: 49 } ]
API RECV: settingPage
select * from userdata where userName='155******20'
[]
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475115044341 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: settingPage
select * from userdata where userName='18261383871'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '江苏',
    idNumber: '333333',
    phoneNumber: '1232456',
    email: 'asdasdas',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: questionlist
> INFO:
Server is running on:8000!
API RECV: settingPage
> ERR:
TypeError: Cannot read property 'phone' of undefined
    at /xmgc_main/my_modules/rotr.js:134:69
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.settingPage (/xmgc_main/my_modules/rotr.js:133:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '22', phone: '18861304637' },
  time: 1475115123687 }
API RECV: reg
{ id: '22', phone: '18861304637' }
insert into userdata set  userId='22', userName='18861304637'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 8,
    cai: 3 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 1 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('uhhhduh','2016-9-29 10时10分32秒','22','1')
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 8,
    cai: 3 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 1 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 8,
    cai: 3 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 1 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: fansPage
select * from concern where userId='22'
[ RowDataPacket {
    id: 1,
    userId: 22,
    concernId: 34,
    fansId: 47,
    concernDate: Tue Aug 02 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 3, userId: 22, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '121',
    questionDate: '2016-9-27 16时23分48秒',
    gold1: 11 },
  RowDataPacket {
    questionTitle: '世界末日是什么时候',
    questionDate: '2016-9-28 8时58分44秒',
    gold1: 23 },
  RowDataPacket {
    questionTitle: '1212',
    questionDate: '2016-9-28 9时41分53秒',
    gold1: 2 },
  RowDataPacket {
    questionTitle: 'dsfs',
    questionDate: '2016-9-28 11时19分37秒',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '211332123333',
    questionDate: '2016-9-28 11时35分23秒',
    gold1: 11 },
  RowDataPacket {
    questionTitle: '你猜我是谁',
    questionDate: '2016-9-28 20时7分47秒',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '我去饿',
    questionDate: '2016-9-28 20时8分14秒',
    gold1: 6 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'aaa', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'fff', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '12123', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '开心', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '发射点发生发射点发生', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '吱吱吱吱吱吱', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '重中之重重中之重组织者', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊水水水水', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '组织者组织', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '我我我我嚄噢哦我', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'uhhhduh', userId: 49 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'aaa', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'fff', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '12123', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '开心', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '发射点发生发射点发生', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '吱吱吱吱吱吱', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '重中之重重中之重组织者', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊水水水水', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '组织者组织', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '我我我我嚄噢哦我', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'uhhhduh', userId: 49 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'aaa', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'fff', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '12123', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '开心', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '发射点发生发射点发生', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '吱吱吱吱吱吱', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '重中之重重中之重组织者', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊水水水水', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '组织者组织', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '我我我我嚄噢哦我', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'uhhhduh', userId: 49 } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '121',
    questionDate: '2016-9-27 16时23分48秒',
    gold1: 11 },
  RowDataPacket {
    questionTitle: '世界末日是什么时候',
    questionDate: '2016-9-28 8时58分44秒',
    gold1: 23 },
  RowDataPacket {
    questionTitle: '1212',
    questionDate: '2016-9-28 9时41分53秒',
    gold1: 2 },
  RowDataPacket {
    questionTitle: 'dsfs',
    questionDate: '2016-9-28 11时19分37秒',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '211332123333',
    questionDate: '2016-9-28 11时35分23秒',
    gold1: 11 },
  RowDataPacket {
    questionTitle: '你猜我是谁',
    questionDate: '2016-9-28 20时7分47秒',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '我去饿',
    questionDate: '2016-9-28 20时8分14秒',
    gold1: 6 } ]
API RECV: reg
{ id: '47', phone: '180******63', nick: 'guozhen' }
insert into userdata set  userId='47', userName='180******63'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '47' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ccc', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 } ]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: settingPage
select * from userdata where userName='180******63'
[]
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: myquestion
数据库查询数据 []
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ccc', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 } ]
API RECV: myquestion
数据库查询数据 []
API RECV: myquestion
数据库查询数据 []
API RECV: myquestion
数据库查询数据 []
API RECV: myquestion
数据库查询数据 []
API RECV: fansPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: myquestion
数据库查询数据 []
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ccc', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 } ]
API RECV: myquestion
数据库查询数据 []
API RECV: myquestion
数据库查询数据 []
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '31', phone: '18179566373', nick: '李健熙' },
  time: 1475116671820 }
API RECV: reg
{ id: '31', phone: '18179566373', nick: '李健熙' }
insert into userdata set  userId='31', userName='18179566373'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '31' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='31'
[]
API RECV: fansPage
select * from concern where userId='31'
[]
API RECV: responsePage
数据库查询数据 []
API RECV: questionlist
API RECV: reg
{ id: '47', phone: '180******63', nick: 'guozhen' }
insert into userdata set  userId='47', userName='180******63'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '47' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: myquestion
数据库查询数据 []
API RECV: fansPage
select * from concern where userId='47'
[ RowDataPacket {
    id: 2,
    userId: 47,
    concernId: 49,
    fansId: 65,
    concernDate: Tue Aug 30 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 4, userId: 47, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: question
insert into userquestion(questionTitle,userId,gold1,directionId,questionDate,questionContent) values ('sa','49','20','1','2016-9-29 10时59分3秒','asdasdasd')
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '李还乡好开心啊',
    questionDate: '2016-09-27 00:00:00',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '这题怎么做？',
    questionDate: '2016-9-27 15:33:5',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '这题复杂了',
    questionDate: '2016-9-27 15时35分21秒',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '哈哈哈哈哈',
    questionDate: '2016-9-27 16时8分44秒',
    gold1: 1222 },
  RowDataPacket {
    questionTitle: '11111',
    questionDate: '2016-9-27 16时16分21秒',
    gold1: 222 },
  RowDataPacket {
    questionTitle: 'ssasda',
    questionDate: '2016-9-27 16时50分4秒',
    gold1: 1231 },
  RowDataPacket {
    questionTitle: 'html',
    questionDate: '2016-9-27 17时32分57秒',
    gold1: 1 },
  RowDataPacket {
    questionTitle: '什么鬼',
    questionDate: '2016-9-28 10时37分21秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '222',
    questionDate: '2016-9-28 10时53分16秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '加加加',
    questionDate: '2016-9-28 11时0分17秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '阿萨斯',
    questionDate: '2016-9-28 11时4分55秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啊实打实大发生的发生',
    questionDate: '2016-9-28 11时11分33秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分34秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分41秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分45秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啦啦啦啦啦',
    questionDate: '2016-9-28 11时37分50秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '张艳菲',
    questionDate: '2016-9-28 21时12分11秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '你多福多寿',
    questionDate: '2016-9-29 9时44分10秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: 'sa',
    questionDate: '2016-9-29 10时59分3秒',
    gold1: 20 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ddd', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '大师大师的', userId: 49 } ]
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: resetInfoPage
update userdata set userName='18261383871',sex='',address='',idNumber='',phoneNumber='',email='',company='',selfIntroduction='' where userId='49'
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475118948240 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='18261383871'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '',
    address: '',
    idNumber: '',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: questionlist
API RECV: reg
{ id: '34', phone: '155******20', nick: 'lihx' }
insert into userdata set  userId='34', userName='155******20'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '34' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='155******20'
[]
API RECV: settingPage
select * from userdata where userName='155******20'
[]
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '李还乡好开心啊',
    questionDate: '2016-09-27 00:00:00',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '这题怎么做？',
    questionDate: '2016-9-27 15:33:5',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '这题复杂了',
    questionDate: '2016-9-27 15时35分21秒',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '哈哈哈哈哈',
    questionDate: '2016-9-27 16时8分44秒',
    gold1: 1222 },
  RowDataPacket {
    questionTitle: '11111',
    questionDate: '2016-9-27 16时16分21秒',
    gold1: 222 },
  RowDataPacket {
    questionTitle: 'ssasda',
    questionDate: '2016-9-27 16时50分4秒',
    gold1: 1231 },
  RowDataPacket {
    questionTitle: 'html',
    questionDate: '2016-9-27 17时32分57秒',
    gold1: 1 },
  RowDataPacket {
    questionTitle: '什么鬼',
    questionDate: '2016-9-28 10时37分21秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '222',
    questionDate: '2016-9-28 10时53分16秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '加加加',
    questionDate: '2016-9-28 11时0分17秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '阿萨斯',
    questionDate: '2016-9-28 11时4分55秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啊实打实大发生的发生',
    questionDate: '2016-9-28 11时11分33秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分34秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分41秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分45秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啦啦啦啦啦',
    questionDate: '2016-9-28 11时37分50秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '张艳菲',
    questionDate: '2016-9-28 21时12分11秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '你多福多寿',
    questionDate: '2016-9-29 9时44分10秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: 'sa',
    questionDate: '2016-9-29 10时59分3秒',
    gold1: 20 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ddd', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '大师大师的', userId: 49 } ]
API RECV: questionlist
API RECV: question
insert into userquestion(questionTitle,userId,gold1,directionId,questionDate,questionContent) values ('halahala','49','20','1','2016-9-29 11时18分4秒','asdasda')
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 10,
    cai: 5 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ddd', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '大师大师的', userId: 49 } ]
API RECV: questionlist
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ddd', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '大师大师的', userId: 49 } ]
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 10,
    cai: 5 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 10,
    cai: 5 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 11,
    cai: 5 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 } ]
API RECV: caicai
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 11,
    cai: 6 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('hahah ','2016-9-29 11时19分35秒','49','1')
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('hahah a','2016-9-29 11时19分52秒','49','1')
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 11,
    cai: 6 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: resetInfoPage
update userdata set userName='',sex='',address='',idNumber='',phoneNumber='',email='',company='',selfIntroduction='' where userId='49'
> INFO:
Server is running on:8000!
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475119652934 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userId='49'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '',
    sex: '',
    address: '',
    idNumber: '',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: resetInfoPage
update userdata set userName='18261383871',sex='男',address='啦啦啦',idNumber='萨达',phoneNumber='',email='',company='',selfIntroduction='' where userId='49'
API RECV: settingPage
select * from userdata where userId='49'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '啦啦啦',
    idNumber: '萨达',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userId='49'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '啦啦啦',
    idNumber: '萨达',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userId='49'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '啦啦啦',
    idNumber: '萨达',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: reg
{ id: '34', phone: '155******20', nick: 'lihx' }
insert into userdata set  userId='34', userName='155******20'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '34' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: settingPage
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '18861304637',
    sex: '男',
    address: '啊啊啊',
    idNumber: '11111',
    phoneNumber: '111',
    email: '1111',
    headImage: null,
    company: '1111',
    selfIntroduction: '1111',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '121',
    questionDate: '2016-9-27 16时23分48秒',
    gold1: 11 },
  RowDataPacket {
    questionTitle: 'dsfs',
    questionDate: '2016-9-28 11时19分37秒',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '你猜我是谁',
    questionDate: '2016-9-28 20时7分47秒',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '我去饿',
    questionDate: '2016-9-28 20时8分14秒',
    gold1: 6 } ]
API RECV: settingPage
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '18861304637',
    sex: '男',
    address: '啊啊啊',
    idNumber: '11111',
    phoneNumber: '111',
    email: '1111',
    headImage: null,
    company: '1111',
    selfIntroduction: '1111',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 11,
    cai: 6 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 6 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: caicai
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('郭振喜欢张鼎','2016-9-29 11时31分56秒','22','1')
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
> INFO:
Server is running on:8000!
API RECV: question
> ERR:
TypeError: Cannot read property 'id' of undefined
    at /xmgc_main/my_modules/rotr.js:230:167
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._rotr.apis.question (/xmgc_main/my_modules/rotr.js:219:14)
    at Object.apihandler (/xmgc_main/my_modules/rotr.js:35:21)
    at next (native)
    at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)
    at next (native)
API RECV: questionlist
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: question
insert into userquestion(questionTitle,userId,gold1,directionId,questionDate,questionContent) values ('似的','22','1','1','2016-9-29 11时33分55秒','为')
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 5,
    resContent: 'eee',
    userName: '13218027916',
    resDate: null,
    zan: 4,
    cai: 1 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 4,
    resContent: 'ddd',
    userName: '18261383871',
    resDate: null,
    zan: 3,
    cai: 1 } ]
API RECV: question1
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 3,
    resContent: 'ccc',
    userName: '18039300963',
    resDate: null,
    zan: 5,
    cai: 0 },
  RowDataPacket {
    resId: 15,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 10时34分37秒',
    zan: 0,
    cai: 0 } ]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
> INFO:
Server is running on:8000!
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 2,
    resContent: 'bbb',
    userName: '15517724520',
    resDate: null,
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 8,
    resContent: '谁动了我的数据库',
    userName: '15517724520',
    resDate: null,
    zan: 6,
    cai: 2 },
  RowDataPacket {
    resId: 11,
    resContent: '发射点发生发射点发生',
    userName: '18861304637',
    resDate: '2016-9-28 10时0分40秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 16,
    resContent: '吱吱吱吱吱吱',
    userName: '18861304637',
    resDate: '2016-9-28 10时35分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 17,
    resContent: '重中之重重中之重组织者',
    userName: '18861304637',
    resDate: '2016-9-28 10时53分37秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 0,
    cai: 0 } ]
API RECV: questionlist
API RECV: topicPage
API RECV: question1
API RECV: answerlist
数据库查询数据 []
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 2,
    resContent: 'bbb',
    userName: '15517724520',
    resDate: null,
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 8,
    resContent: '谁动了我的数据库',
    userName: '15517724520',
    resDate: null,
    zan: 6,
    cai: 2 },
  RowDataPacket {
    resId: 11,
    resContent: '发射点发生发射点发生',
    userName: '18861304637',
    resDate: '2016-9-28 10时0分40秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 16,
    resContent: '吱吱吱吱吱吱',
    userName: '18861304637',
    resDate: '2016-9-28 10时35分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 17,
    resContent: '重中之重重中之重组织者',
    userName: '18861304637',
    resDate: '2016-9-28 10时53分37秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 2,
    resContent: 'bbb',
    userName: '15517724520',
    resDate: null,
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 8,
    resContent: '谁动了我的数据库',
    userName: '15517724520',
    resDate: null,
    zan: 6,
    cai: 2 },
  RowDataPacket {
    resId: 11,
    resContent: '发射点发生发射点发生',
    userName: '18861304637',
    resDate: '2016-9-28 10时0分40秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 16,
    resContent: '吱吱吱吱吱吱',
    userName: '18861304637',
    resDate: '2016-9-28 10时35分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 17,
    resContent: '重中之重重中之重组织者',
    userName: '18861304637',
    resDate: '2016-9-28 10时53分37秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 4,
    resContent: 'ddd',
    userName: '18261383871',
    resDate: null,
    zan: 3,
    cai: 1 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: login1
> ERR:
Error: 你的姓名格式不合法！
    at Error (native)
    at /xmgc_main/my_modules/fns.js:229:28
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._fns.getUidByLogin (/xmgc_main/my_modules/fns.js:222:14)
    at /xmgc_main/my_modules/rotr.js:82:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '李还乡好开心啊',
    questionDate: '2016-09-27 00:00:00',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '这题怎么做？',
    questionDate: '2016-9-27 15:33:5',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '这题复杂了',
    questionDate: '2016-9-27 15时35分21秒',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '哈哈哈哈哈',
    questionDate: '2016-9-27 16时8分44秒',
    gold1: 1222 },
  RowDataPacket {
    questionTitle: '11111',
    questionDate: '2016-9-27 16时16分21秒',
    gold1: 222 },
  RowDataPacket {
    questionTitle: 'ssasda',
    questionDate: '2016-9-27 16时50分4秒',
    gold1: 1231 },
  RowDataPacket {
    questionTitle: 'html',
    questionDate: '2016-9-27 17时32分57秒',
    gold1: 1 },
  RowDataPacket {
    questionTitle: '什么鬼',
    questionDate: '2016-9-28 10时37分21秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '222',
    questionDate: '2016-9-28 10时53分16秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '加加加',
    questionDate: '2016-9-28 11时0分17秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '阿萨斯',
    questionDate: '2016-9-28 11时4分55秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啊实打实大发生的发生',
    questionDate: '2016-9-28 11时11分33秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分34秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分41秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分45秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啦啦啦啦啦',
    questionDate: '2016-9-28 11时37分50秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '张艳菲',
    questionDate: '2016-9-28 21时12分11秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '你多福多寿',
    questionDate: '2016-9-29 9时44分10秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: 'sa',
    questionDate: '2016-9-29 10时59分3秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: 'halahala',
    questionDate: '2016-9-29 11时18分4秒',
    gold1: 20 } ]
API RECV: login1
> ERR:
Error: 你的姓名格式不合法！
    at Error (native)
    at /xmgc_main/my_modules/fns.js:229:28
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._fns.getUidByLogin (/xmgc_main/my_modules/fns.js:222:14)
    at /xmgc_main/my_modules/rotr.js:82:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '李还乡好开心啊',
    questionDate: '2016-09-27 00:00:00',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '这题怎么做？',
    questionDate: '2016-9-27 15:33:5',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '这题复杂了',
    questionDate: '2016-9-27 15时35分21秒',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '哈哈哈哈哈',
    questionDate: '2016-9-27 16时8分44秒',
    gold1: 1222 },
  RowDataPacket {
    questionTitle: '11111',
    questionDate: '2016-9-27 16时16分21秒',
    gold1: 222 },
  RowDataPacket {
    questionTitle: 'ssasda',
    questionDate: '2016-9-27 16时50分4秒',
    gold1: 1231 },
  RowDataPacket {
    questionTitle: 'html',
    questionDate: '2016-9-27 17时32分57秒',
    gold1: 1 },
  RowDataPacket {
    questionTitle: '什么鬼',
    questionDate: '2016-9-28 10时37分21秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '222',
    questionDate: '2016-9-28 10时53分16秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '加加加',
    questionDate: '2016-9-28 11时0分17秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '阿萨斯',
    questionDate: '2016-9-28 11时4分55秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啊实打实大发生的发生',
    questionDate: '2016-9-28 11时11分33秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分34秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分41秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啥啥啥',
    questionDate: '2016-9-28 11时29分45秒',
    gold1: 123 },
  RowDataPacket {
    questionTitle: '啦啦啦啦啦',
    questionDate: '2016-9-28 11时37分50秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '张艳菲',
    questionDate: '2016-9-28 21时12分11秒',
    gold1: 200 },
  RowDataPacket {
    questionTitle: '你多福多寿',
    questionDate: '2016-9-29 9时44分10秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: 'sa',
    questionDate: '2016-9-29 10时59分3秒',
    gold1: 20 },
  RowDataPacket {
    questionTitle: 'halahala',
    questionDate: '2016-9-29 11时18分4秒',
    gold1: 20 } ]
API RECV: reg
{ id: '34', phone: '155******20', nick: 'lihx' }
insert into userdata set  userId='34', userName='155******20'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '34' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 5,
    resContent: 'eee',
    userName: '13218027916',
    resDate: null,
    zan: 4,
    cai: 1 } ]
API RECV: question1
API RECV: settingPage
select * from userdata where userId='34'
[ RowDataPacket {
    userId: 34,
    userPwd: null,
    userName: '15517724520',
    sex: '女',
    address: '河南商丘',
    idNumber: '411423',
    phoneNumber: '1551772',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '2' } ]
API RECV: settingPage
select * from userdata where userId='34'
[ RowDataPacket {
    userId: 34,
    userPwd: null,
    userName: '15517724520',
    sex: '女',
    address: '河南商丘',
    idNumber: '411423',
    phoneNumber: '1551772',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '2' } ]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: myquestion
数据库查询数据 []
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'bbb', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '谁动了我的数据库', userId: 49 } ]
API RECV: myquestion
数据库查询数据 []
API RECV: myquestion
数据库查询数据 []
API RECV: concernPage
select * from concern where userId='34'
[ RowDataPacket { id: 5, userId: 34, concernId: 22, fansId: 65, concernDate: null } ]
API RECV: fansPage
select * from concern where userId='34'
[ RowDataPacket { id: 5, userId: 34, concernId: 22, fansId: 65, concernDate: null } ]
API RECV: concernPage
select * from concern where userId='34'
[ RowDataPacket { id: 5, userId: 34, concernId: 22, fansId: 65, concernDate: null } ]
API RECV: myquestion
数据库查询数据 []
API RECV: myquestion
数据库查询数据 []
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'bbb', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '谁动了我的数据库', userId: 49 } ]
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 5,
    resContent: 'eee',
    userName: '13218027916',
    resDate: null,
    zan: 4,
    cai: 1 } ]
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 5,
    resContent: 'eee',
    userName: '13218027916',
    resDate: null,
    zan: 4,
    cai: 1 } ]
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 5,
    resContent: 'eee',
    userName: '13218027916',
    resDate: null,
    zan: 4,
    cai: 1 } ]
API RECV: questionlist
API RECV: reg
{ id: '34', phone: '155******20', nick: 'lihx' }
insert into userdata set  userId='34', userName='155******20'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '34' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 1,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 2,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: reg
{ id: '34', phone: '155******20', nick: 'lihx' }
insert into userdata set  userId='34', userName='155******20'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '34' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: questionlist
API RECV: question
insert into userquestion(questionTitle,userId,gold1,directionId,questionDate,questionContent) values ('不错，好饱啊~','34','60','5','2016-9-29 13时9分22秒','')
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 6,
    resContent: 'fff',
    userName: '18861304637',
    resDate: null,
    zan: 5,
    cai: 2 } ]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 5,
    resContent: 'eee',
    userName: '13218027916',
    resDate: null,
    zan: 4,
    cai: 1 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 31,
    resContent: 'qweqwe',
    userName: '18861304637',
    resDate: '2016-9-29 12时26分30秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 32,
    resContent: '钱钱钱钱钱钱钱钱钱',
    userName: '18861304637',
    resDate: '2016-9-29 12时29分8秒',
    zan: 1,
    cai: 2 } ]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 32,
    resContent: '钱钱钱钱钱钱钱钱钱',
    userName: '18861304637',
    resDate: '2016-9-29 12时29分8秒',
    zan: 1,
    cai: 2 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 32,
    resContent: '钱钱钱钱钱钱钱钱钱',
    userName: '18861304637',
    resDate: '2016-9-29 12时29分8秒',
    zan: 1,
    cai: 2 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 31,
    resContent: 'qweqwe',
    userName: '18861304637',
    resDate: '2016-9-29 12时26分30秒',
    zan: 0,
    cai: 0 } ]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: questionlist
API RECV: questionlist
API RECV: questionlist
API RECV: questionlist
API RECV: questionlist
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='34'
[ RowDataPacket { id: 5, userId: 34, concernId: 22, fansId: 65, concernDate: null } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '不错，好饱啊~',
    questionDate: '2016-9-29 13时9分22秒',
    gold1: 60 } ]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: settingPage
select * from userdata where userId='34'
[ RowDataPacket {
    userId: 34,
    userPwd: null,
    userName: '15517724520',
    sex: '女',
    address: '河南商丘',
    idNumber: '411423',
    phoneNumber: '1551772',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '2' } ]
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '34', phone: '15517724520', nick: 'lihx' },
  time: 1475126661883 }
API RECV: reg
{ id: '34', phone: '15517724520', nick: 'lihx' }
insert into userdata set  userId='34', userName='15517724520'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '34' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 32,
    resContent: '钱钱钱钱钱钱钱钱钱',
    userName: '18861304637',
    resDate: '2016-9-29 12时29分8秒',
    zan: 1,
    cai: 2 } ]
API RECV: topicPage
API RECV: question1
API RECV: answerlist
数据库查询数据 []
API RECV: topicPage
API RECV: topicPage
API RECV: concernPage
select * from concern where userId='34'
[ RowDataPacket { id: 5, userId: 34, concernId: 22, fansId: 65, concernDate: null } ]
API RECV: settingPage
select * from userdata where userId='34'
[ RowDataPacket {
    userId: 34,
    userPwd: null,
    userName: '15517724520',
    sex: '女',
    address: '河南商丘',
    idNumber: '411423',
    phoneNumber: '1551772',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '2' } ]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 32,
    resContent: '钱钱钱钱钱钱钱钱钱',
    userName: '18861304637',
    resDate: '2016-9-29 12时29分8秒',
    zan: 1,
    cai: 2 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: questionlist
API RECV: topicPage
API RECV: questionlist
API RECV: questionlist
API RECV: questionlist
API RECV: questionlist
API RECV: questionlist
> INFO:
Server is running on:8000!
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: questionlist
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: question1
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: questionlist
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '李还乡好开心啊',
    questionDate: '2016-09-27 00:00:00',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '这题怎么做？',
    questionDate: '2016-9-27 15:33:5',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '这题复杂了',
    questionDate: '2016-9-27 15时35分21秒',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '哈哈哈哈哈',
    questionDate: '2016-9-27 16时8分44秒',
    gold1: 1222 } ]
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 3,
    resContent: 'ccc',
    userName: '18039300963',
    resDate: null,
    zan: 5,
    cai: 0 },
  RowDataPacket {
    resId: 15,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 10时34分37秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475127903996 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='18261383871'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '啦啦啦',
    idNumber: '萨达',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ddd', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '大师大师的', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'hahah ', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'hahah a', userId: 49 } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '李还乡好开心啊',
    questionDate: '2016-09-27 00:00:00',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '这题怎么做？',
    questionDate: '2016-9-27 15:33:5',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '这题复杂了',
    questionDate: '2016-9-27 15时35分21秒',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '哈哈哈哈哈',
    questionDate: '2016-9-27 16时8分44秒',
    gold1: 1222 } ]
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: questionlist
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='188******37'
[]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'ewrwerw',
    questionDate: '2016-9-29 12时23分55秒',
    gold1: 1 },
  RowDataPacket {
    questionTitle: '你啦啥啊',
    questionDate: '2016-9-29 12时26分59秒',
    gold1: 33 } ]
API RECV: questionlist
API RECV: fansPage
select * from concern where userId='22'
[ RowDataPacket {
    id: 1,
    userId: 22,
    concernId: 34,
    fansId: 47,
    concernDate: Tue Aug 02 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 3, userId: 22, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: topicPage
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'aaa', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'fff', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '12123', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '开心', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '发射点发生发射点发生', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '吱吱吱吱吱吱', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '重中之重重中之重组织者', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊水水水水', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '组织者组织', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '我我我我嚄噢哦我', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'uhhhduh', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '郭振喜欢张鼎', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'qweqwe', userId: 22 },
  RowDataPacket { directionName: 'html', resContent: '钱钱钱钱钱钱钱钱钱', userId: 22 } ]
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 2,
    resContent: 'bbb',
    userName: '15517724520',
    resDate: null,
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 8,
    resContent: '谁动了我的数据库',
    userName: '15517724520',
    resDate: null,
    zan: 6,
    cai: 2 },
  RowDataPacket {
    resId: 11,
    resContent: '发射点发生发射点发生',
    userName: '18861304637',
    resDate: '2016-9-28 10时0分40秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 16,
    resContent: '吱吱吱吱吱吱',
    userName: '18861304637',
    resDate: '2016-9-28 10时35分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 17,
    resContent: '重中之重重中之重组织者',
    userName: '18861304637',
    resDate: '2016-9-28 10时53分37秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('','2016-9-29 13时49分23秒','22','2')
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ddd', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '大师大师的', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'hahah ', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'hahah a', userId: 49 } ]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: question1
API RECV: answerlist
数据库查询数据 []
API RECV: questionlist
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('米饭','2016-9-29 13时50分53秒','49','44')
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 34,
    resContent: '米饭',
    userName: '18261383871',
    resDate: '2016-9-29 13时50分53秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('啊啊啊啊啊啊啊啊啊','2016-9-29 13时49分25秒','49','44')
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: questionlist
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 34,
    resContent: '米饭',
    userName: '18261383871',
    resDate: '2016-9-29 13时50分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 35,
    resContent: '啊啊啊啊啊啊啊啊啊',
    userName: '18261383871',
    resDate: '2016-9-29 13时49分25秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 34,
    resContent: '米饭',
    userName: '18261383871',
    resDate: '2016-9-29 13时50分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 35,
    resContent: '啊啊啊啊啊啊啊啊啊',
    userName: '18261383871',
    resDate: '2016-9-29 13时49分25秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 34,
    resContent: '米饭',
    userName: '18261383871',
    resDate: '2016-9-29 13时50分53秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 35,
    resContent: '啊啊啊啊啊啊啊啊啊',
    userName: '18261383871',
    resDate: '2016-9-29 13时49分25秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: caicai
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 34,
    resContent: '米饭',
    userName: '18261383871',
    resDate: '2016-9-29 13时50分53秒',
    zan: 1,
    cai: 1 },
  RowDataPacket {
    resId: 35,
    resContent: '啊啊啊啊啊啊啊啊啊',
    userName: '18261383871',
    resDate: '2016-9-29 13时49分25秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '李还乡好开心啊',
    questionDate: '2016-09-27 00:00:00',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '这题怎么做？',
    questionDate: '2016-9-27 15:33:5',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '这题复杂了',
    questionDate: '2016-9-27 15时35分21秒',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '哈哈哈哈哈',
    questionDate: '2016-9-27 16时8分44秒',
    gold1: 1222 } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '李还乡好开心啊',
    questionDate: '2016-09-27 00:00:00',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '这题怎么做？',
    questionDate: '2016-9-27 15:33:5',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '这题复杂了',
    questionDate: '2016-9-27 15时35分21秒',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '哈哈哈哈哈',
    questionDate: '2016-9-27 16时8分44秒',
    gold1: 1222 } ]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 5,
    resContent: 'eee',
    userName: '13218027916',
    resDate: null,
    zan: 4,
    cai: 1 } ]
API RECV: question1
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '22', phone: '18861304637' },
  time: 1475128511932 }
API RECV: reg
{ id: '22', phone: '18861304637' }
insert into userdata set  userId='22', userName='18861304637'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: settingPage
select * from userdata where userName='18861304637'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '18861304637',
    sex: '男',
    address: '啊啊啊',
    idNumber: '11111',
    phoneNumber: '111',
    email: '1111',
    headImage: null,
    company: '1111',
    selfIntroduction: '1111',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: questionlist
API RECV: questionlist
API RECV: reg
{ id: '5', phone: '184******30', nick: '木易流年', color: '#ccc000' }
insert into userdata set  userId='5', userName='184******30'
API RECV: questionlist
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 2,
    resContent: 'bbb',
    userName: '15517724520',
    resDate: null,
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 8,
    resContent: '谁动了我的数据库',
    userName: '15517724520',
    resDate: null,
    zan: 6,
    cai: 2 },
  RowDataPacket {
    resId: 11,
    resContent: '发射点发生发射点发生',
    userName: '18861304637',
    resDate: '2016-9-28 10时0分40秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 16,
    resContent: '吱吱吱吱吱吱',
    userName: '18861304637',
    resDate: '2016-9-28 10时35分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 17,
    resContent: '重中之重重中之重组织者',
    userName: '18861304637',
    resDate: '2016-9-28 10时53分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 33,
    resContent: '',
    userName: '18861304637',
    resDate: '2016-9-29 13时49分23秒',
    zan: 0,
    cai: 0 } ]
API RECV: questionlist
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: myquestion
数据库查询数据 []
API RECV: responsePage
数据库查询数据 []
API RECV: fansPage
select * from concern where userId='5'
[]
API RECV: settingPage
select * from userdata where userName='184******30'
[ RowDataPacket {
    userId: 5,
    userPwd: null,
    userName: '184******30',
    sex: null,
    address: null,
    idNumber: null,
    phoneNumber: null,
    email: null,
    headImage: null,
    company: null,
    selfIntroduction: null,
    experts: null,
    manager: null,
    goldNum: 100,
    levelId: null } ]
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '22', phone: '18861304637' },
  time: 1475129811540 }
API RECV: reg
{ id: '22', phone: '18861304637' }
insert into userdata set  userId='22', userName='18861304637'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: settingPage
select * from userdata where userName='18861304637'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '18861304637',
    sex: '男',
    address: '啊啊啊',
    idNumber: '11111',
    phoneNumber: '111',
    email: '1111',
    headImage: null,
    company: '1111',
    selfIntroduction: '1111',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'ewrwerw',
    questionDate: '2016-9-29 12时23分55秒',
    gold1: 1 },
  RowDataPacket {
    questionTitle: '你啦啥啊',
    questionDate: '2016-9-29 12时26分59秒',
    gold1: 33 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'aaa', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'fff', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '12123', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '开心', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '发射点发生发射点发生', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '吱吱吱吱吱吱', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '重中之重重中之重组织者', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊水水水水', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '组织者组织', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '我我我我嚄噢哦我', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'uhhhduh', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '郭振喜欢张鼎', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'qweqwe', userId: 22 },
  RowDataPacket { directionName: 'html', resContent: '钱钱钱钱钱钱钱钱钱', userId: 22 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 } ]
API RECV: fansPage
select * from concern where userId='22'
[ RowDataPacket {
    id: 1,
    userId: 22,
    concernId: 34,
    fansId: 47,
    concernDate: Tue Aug 02 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 3, userId: 22, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: questionlist
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: reg
{ id: '5', phone: '184******30', nick: '木易流年', color: '#ccc000' }
insert into userdata set  userId='5', userName='184******30'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '5' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 2,
    resContent: 'bbb',
    userName: '15517724520',
    resDate: null,
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 8,
    resContent: '谁动了我的数据库',
    userName: '15517724520',
    resDate: null,
    zan: 6,
    cai: 2 },
  RowDataPacket {
    resId: 11,
    resContent: '发射点发生发射点发生',
    userName: '18861304637',
    resDate: '2016-9-28 10时0分40秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 16,
    resContent: '吱吱吱吱吱吱',
    userName: '18861304637',
    resDate: '2016-9-28 10时35分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 17,
    resContent: '重中之重重中之重组织者',
    userName: '18861304637',
    resDate: '2016-9-28 10时53分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 33,
    resContent: '',
    userName: '18861304637',
    resDate: '2016-9-29 13时49分23秒',
    zan: 0,
    cai: 0 } ]
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 3,
    resContent: 'ccc',
    userName: '18039300963',
    resDate: null,
    zan: 5,
    cai: 0 },
  RowDataPacket {
    resId: 15,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 10时34分37秒',
    zan: 0,
    cai: 0 } ]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 4,
    resContent: 'ddd',
    userName: '18261383871',
    resDate: null,
    zan: 3,
    cai: 1 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 34,
    resContent: '米饭',
    userName: '18261383871',
    resDate: '2016-9-29 13时50分53秒',
    zan: 1,
    cai: 1 },
  RowDataPacket {
    resId: 35,
    resContent: '啊啊啊啊啊啊啊啊啊',
    userName: '18261383871',
    resDate: '2016-9-29 13时49分25秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question
insert into userquestion(questionTitle,userId,gold1,directionId,questionDate,questionContent) values ('啦啦啦啦啦','5','10','2','2016-9-29 14时34分19秒','我来试试')
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 32,
    resContent: '钱钱钱钱钱钱钱钱钱',
    userName: '18861304637',
    resDate: '2016-9-29 12时29分8秒',
    zan: 1,
    cai: 2 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 32,
    resContent: '钱钱钱钱钱钱钱钱钱',
    userName: '18861304637',
    resDate: '2016-9-29 12时29分8秒',
    zan: 2,
    cai: 2 } ]
API RECV: question1
API RECV: caicai
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 32,
    resContent: '钱钱钱钱钱钱钱钱钱',
    userName: '18861304637',
    resDate: '2016-9-29 12时29分8秒',
    zan: 2,
    cai: 3 } ]
API RECV: question1
API RECV: questionlist
API RECV: questionlist
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: '啦啦啦啦啦',
    questionDate: '2016-9-29 14时34分19秒',
    gold1: 10 } ]
API RECV: responsePage
数据库查询数据 []
API RECV: settingPage
select * from userdata where userName='184******30'
[ RowDataPacket {
    userId: 5,
    userPwd: null,
    userName: '184******30',
    sex: null,
    address: null,
    idNumber: null,
    phoneNumber: null,
    email: null,
    headImage: null,
    company: null,
    selfIntroduction: null,
    experts: null,
    manager: null,
    goldNum: 100,
    levelId: null } ]
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: settingPage
select * from userdata where userName='188******37'
[]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'ewrwerw',
    questionDate: '2016-9-29 12时23分55秒',
    gold1: 1 },
  RowDataPacket {
    questionTitle: '你啦啥啊',
    questionDate: '2016-9-29 12时26分59秒',
    gold1: 33 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'aaa', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'fff', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '12123', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '开心', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '发射点发生发射点发生', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '吱吱吱吱吱吱', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '重中之重重中之重组织者', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊水水水水', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '组织者组织', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '我我我我嚄噢哦我', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'uhhhduh', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '郭振喜欢张鼎', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'qweqwe', userId: 22 },
  RowDataPacket { directionName: 'html', resContent: '钱钱钱钱钱钱钱钱钱', userId: 22 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 } ]
API RECV: questionlist
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
{ id: '43', phone: '137******32', nick: 'stp' }
insert into userdata set  userId='43', userName='137******32'
API RECV: questionlist
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'ewrwerw',
    questionDate: '2016-9-29 12时23分55秒',
    gold1: 1 },
  RowDataPacket {
    questionTitle: '你啦啥啊',
    questionDate: '2016-9-29 12时26分59秒',
    gold1: 33 } ]
API RECV: questionlist
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'aaa', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'fff', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '12123', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '开心', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '发射点发生发射点发生', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '吱吱吱吱吱吱', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '重中之重重中之重组织者', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊水水水水', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '组织者组织', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '我我我我嚄噢哦我', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'uhhhduh', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '郭振喜欢张鼎', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'qweqwe', userId: 22 },
  RowDataPacket { directionName: 'html', resContent: '钱钱钱钱钱钱钱钱钱', userId: 22 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 } ]
API RECV: topicPage
API RECV: settingPage
select * from userdata where userName='188******37'
[]
API RECV: topicPage
API RECV: topicPage
API RECV: concernPage
select * from concern where userId='22'
[ RowDataPacket {
    id: 1,
    userId: 22,
    concernId: 34,
    fansId: 47,
    concernDate: Tue Aug 02 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 3, userId: 22, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: questionlist
API RECV: topicPage
API RECV: question
insert into userquestion(questionTitle,userId,gold1,directionId,questionDate,questionContent) values ('李力帅吗','22','12','2','2016-9-29 15时9分21秒','的后果撒谎的国际化的vhhhsdb')
API RECV: questionlist
API RECV: fansPage
select * from concern where userId='22'
[ RowDataPacket {
    id: 1,
    userId: 22,
    concernId: 34,
    fansId: 47,
    concernDate: Tue Aug 02 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 3, userId: 22, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: topicPage
API RECV: settingPage
select * from userdata where userName='188******37'
[]
API RECV: questionlist
API RECV: topicPage
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'ewrwerw',
    questionDate: '2016-9-29 12时23分55秒',
    gold1: 1 },
  RowDataPacket {
    questionTitle: '你啦啥啊',
    questionDate: '2016-9-29 12时26分59秒',
    gold1: 33 },
  RowDataPacket {
    questionTitle: '李力帅吗',
    questionDate: '2016-9-29 15时9分21秒',
    gold1: 12 } ]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('还挺  ','2016-9-29 15时10分13秒','22','46')
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 36,
    resContent: '还挺  ',
    userName: '18861304637',
    resDate: '2016-9-29 15时10分13秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 36,
    resContent: '还挺  ',
    userName: '18861304637',
    resDate: '2016-9-29 15时10分13秒',
    zan: 1,
    cai: 0 } ]
API RECV: question1
API RECV: caicai
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 36,
    resContent: '还挺  ',
    userName: '18861304637',
    resDate: '2016-9-29 15时10分13秒',
    zan: 1,
    cai: 1 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 36,
    resContent: '还挺  ',
    userName: '18861304637',
    resDate: '2016-9-29 15时10分13秒',
    zan: 2,
    cai: 1 } ]
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 36,
    resContent: '还挺  ',
    userName: '18861304637',
    resDate: '2016-9-29 15时10分13秒',
    zan: 2,
    cai: 1 } ]
API RECV: question1
API RECV: questionlist
API RECV: fansPage
select * from concern where userId='22'
[ RowDataPacket {
    id: 1,
    userId: 22,
    concernId: 34,
    fansId: 47,
    concernDate: Tue Aug 02 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 3, userId: 22, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'aaa', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'fff', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '12123', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '开心', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '发射点发生发射点发生', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '吱吱吱吱吱吱', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '重中之重重中之重组织者', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊水水水水', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '组织者组织', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '我我我我嚄噢哦我', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'uhhhduh', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '郭振喜欢张鼎', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'qweqwe', userId: 22 },
  RowDataPacket { directionName: 'html', resContent: '钱钱钱钱钱钱钱钱钱', userId: 22 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 },
  RowDataPacket { directionName: 'css', resContent: '还挺  ', userId: 22 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'aaa', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'fff', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '12123', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '开心', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '发射点发生发射点发生', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '吱吱吱吱吱吱', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '重中之重重中之重组织者', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊水水水水', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '组织者组织', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '啊啊啊啊啊啊啊', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '我我我我嚄噢哦我', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'uhhhduh', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '郭振喜欢张鼎', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'qweqwe', userId: 22 },
  RowDataPacket { directionName: 'html', resContent: '钱钱钱钱钱钱钱钱钱', userId: 22 },
  RowDataPacket { directionName: 'html', resContent: '', userId: 49 },
  RowDataPacket { directionName: 'css', resContent: '还挺  ', userId: 22 } ]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 6,
    resContent: 'fff',
    userName: '18861304637',
    resDate: null,
    zan: 5,
    cai: 2 } ]
API RECV: question1
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 6,
    resContent: 'fff',
    userName: '18861304637',
    resDate: null,
    zan: 5,
    cai: 2 } ]
API RECV: question1
API RECV: questionlist
API RECV: questionlist
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 12,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 13,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 13,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 } ]
API RECV: question1
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('123','2016-9-29 16时21分14秒','22','1')
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 2,
    resContent: 'bbb',
    userName: '15517724520',
    resDate: null,
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 8,
    resContent: '谁动了我的数据库',
    userName: '15517724520',
    resDate: null,
    zan: 6,
    cai: 2 },
  RowDataPacket {
    resId: 11,
    resContent: '发射点发生发射点发生',
    userName: '18861304637',
    resDate: '2016-9-28 10时0分40秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 16,
    resContent: '吱吱吱吱吱吱',
    userName: '18861304637',
    resDate: '2016-9-28 10时35分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 17,
    resContent: '重中之重重中之重组织者',
    userName: '18861304637',
    resDate: '2016-9-28 10时53分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 33,
    resContent: '',
    userName: '18861304637',
    resDate: '2016-9-29 13时49分23秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: questionlist
API RECV: concernPage
select * from concern where userId='22'
[ RowDataPacket {
    id: 1,
    userId: 22,
    concernId: 34,
    fansId: 47,
    concernDate: Tue Aug 02 2016 00:00:00 GMT+0800 (CST) },
  RowDataPacket { id: 3, userId: 22, concernId: 34, fansId: 22, concernDate: null } ]
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '李还乡好开心啊',
    questionDate: '2016-09-27 00:00:00',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '这题怎么做？',
    questionDate: '2016-9-27 15:33:5',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '这题复杂了',
    questionDate: '2016-9-27 15时35分21秒',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '哈哈哈哈哈',
    questionDate: '2016-9-27 16时8分44秒',
    gold1: 1222 } ]
API RECV: responsePage
数据库查询数据 [ RowDataPacket { directionName: 'html', resContent: 'ddd', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: '大师大师的', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'hahah ', userId: 49 },
  RowDataPacket { directionName: 'html', resContent: 'hahah a', userId: 49 },
  RowDataPacket { directionName: 'java', resContent: '米饭', userId: 34 },
  RowDataPacket { directionName: 'java', resContent: '啊啊啊啊啊啊啊啊啊', userId: 34 } ]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 34,
    resContent: '米饭',
    userName: '18261383871',
    resDate: '2016-9-29 13时50分53秒',
    zan: 1,
    cai: 1 },
  RowDataPacket {
    resId: 35,
    resContent: '啊啊啊啊啊啊啊啊啊',
    userName: '18261383871',
    resDate: '2016-9-29 13时49分25秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 5,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('1213','2016-9-29 16时49分18秒','49','1')
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('1213','2016-9-29 16时49分26秒','49','1')
API RECV: concernPage
select * from concern where userId='49'
[]
API RECV: fansPage
select * from concern where userId='49'
[]
API RECV: myquestion
数据库查询数据 [ RowDataPacket {
    questionTitle: 'jnasdkchkajd',
    questionDate: '2016-09-27 00:00:00',
    gold1: 12 },
  RowDataPacket {
    questionTitle: '李还乡好开心啊',
    questionDate: '2016-09-27 00:00:00',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '开不了口',
    questionDate: '2016-09-27 00:00:00',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '你几岁了？',
    questionDate: '2016-09-27 15:28:11',
    gold1: 20 },
  RowDataPacket {
    questionTitle: '这题怎么做？',
    questionDate: '2016-9-27 15:33:5',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '这题复杂了',
    questionDate: '2016-9-27 15时35分21秒',
    gold1: 15 },
  RowDataPacket {
    questionTitle: '哈哈哈哈哈',
    questionDate: '2016-9-27 16时8分44秒',
    gold1: 1222 } ]
API RECV: expertsPage
SELECT userdata.userName,userdata.userId,level.levelName FROM level,userdata WHERE userdata.levelId=level.levelId;
[ RowDataPacket { userName: '18861304637', userId: 22, levelName: 'A' },
  RowDataPacket { userName: '15517724520', userId: 34, levelName: 'B' },
  RowDataPacket { userName: '15139300963', userId: 222, levelName: 'C' },
  RowDataPacket { userName: '15261383871', userId: 333, levelName: 'D' } ]
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 4,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
API RECV: answerlist
API RECV: question1
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 5,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 6,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 7,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 8,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 9,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 10,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 11,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 12,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 13,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 14,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 15,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 16,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 17,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 18,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 19,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 20,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 21,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 22,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 23,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 24,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 25,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 26,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 27,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 28,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 29,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 30,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 31,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 32,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 33,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 33,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 33,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 } ]
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('sadfs','2016-9-29 17时36分54秒','49','1')
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('嘻嘻嘻','2016-9-29 17时37分24秒','49','1')
API RECV: question
insert into userquestion(questionTitle,userId,gold1,directionId,questionDate,questionContent) values ('啊啊','49','5','4','2016-9-29 17时38分10秒','撒发生法')
API RECV: questionlist
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 33,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 40,
    resContent: 'sadfs',
    userName: '18261383871',
    resDate: '2016-9-29 17时36分54秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 41,
    resContent: '嘻嘻嘻',
    userName: '18261383871',
    resDate: '2016-9-29 17时37分24秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: question111
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 33,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 1,
    cai: 0 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 40,
    resContent: 'sadfs',
    userName: '18261383871',
    resDate: '2016-9-29 17时36分54秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 41,
    resContent: '嘻嘻嘻',
    userName: '18261383871',
    resDate: '2016-9-29 17时37分24秒',
    zan: 0,
    cai: 0 } ]
API RECV: caicai
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    resId: 1,
    resContent: 'aaa',
    userName: '18861304637',
    resDate: null,
    zan: 14,
    cai: 7 },
  RowDataPacket {
    resId: 7,
    resContent: '啊啊啊啊啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 9时39分19秒',
    zan: 33,
    cai: 3 },
  RowDataPacket {
    resId: 9,
    resContent: '12123',
    userName: '18861304637',
    resDate: '2016-9-28 9时42分26秒',
    zan: 1,
    cai: 2 },
  RowDataPacket {
    resId: 10,
    resContent: '开心',
    userName: '18861304637',
    resDate: '2016-9-28 9时46分41秒',
    zan: 0,
    cai: 1 },
  RowDataPacket {
    resId: 18,
    resContent: '啊啊啊啊啊水水水水',
    userName: '18861304637',
    resDate: '2016-9-28 11时0分28秒',
    zan: 0,
    cai: 2 },
  RowDataPacket {
    resId: 19,
    resContent: '组织者组织',
    userName: '18861304637',
    resDate: '2016-9-28 11时3分37秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 22,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分20秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 23,
    resContent: '',
    userName: '18039300963',
    resDate: '2016-9-28 21时14分30秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 24,
    resContent: '啊啊啊啊啊啊啊',
    userName: '18861304637',
    resDate: '2016-9-28 21时16分53秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 25,
    resContent: '大师大师的',
    userName: '18261383871',
    resDate: '2016-9-28 21时32分33秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 26,
    resContent: '我我我我嚄噢哦我',
    userName: '18861304637',
    resDate: '2016-9-29 9时59分23秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 27,
    resContent: 'uhhhduh',
    userName: '18861304637',
    resDate: '2016-9-29 10时10分32秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    resId: 28,
    resContent: 'hahah ',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分35秒',
    zan: 1,
    cai: 1 },
  RowDataPacket {
    resId: 29,
    resContent: 'hahah a',
    userName: '18261383871',
    resDate: '2016-9-29 11时19分52秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 30,
    resContent: '郭振喜欢张鼎',
    userName: '18861304637',
    resDate: '2016-9-29 11时31分56秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    resId: 37,
    resContent: '123',
    userName: '18861304637',
    resDate: '2016-9-29 16时21分14秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 38,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分18秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 39,
    resContent: '1213',
    userName: '18261383871',
    resDate: '2016-9-29 16时49分26秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 40,
    resContent: 'sadfs',
    userName: '18261383871',
    resDate: '2016-9-29 17时36分54秒',
    zan: 0,
    cai: 0 },
  RowDataPacket {
    resId: 41,
    resContent: '嘻嘻嘻',
    userName: '18261383871',
    resDate: '2016-9-29 17时37分24秒',
    zan: 0,
    cai: 0 } ]
API RECV: question1
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('gggggggggggggg','2016-9-29 18时13分16秒','49','1')
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('gggggggggggggg','2016-9-29 18时13分38秒','49','1')
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: questionlist
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475144896895 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='18261383871'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '啦啦啦',
    idNumber: '萨达',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: questionlist
API RECV: question
insert into userquestion(questionTitle,userId,gold1,directionId,questionDate,questionContent) values ('jajajajaj','49','20','1','2016-9-29 18时35分48秒','ssssss')
API RECV: questionlist
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userName='182******71'
[]
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475145696459 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475145801593 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475145870593 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475145878285 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475145942674 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: login1
{ code: 1,
  text: 'ok',
  data: { id: '49', phone: '18261383871' },
  time: 1475145968005 }
API RECV: reg
{ id: '49', phone: '18261383871' }
insert into userdata set  userId='49', userName='18261383871'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
> INFO:
Server is running on:8000!
API RECV: login1
> ERR:
Error: 您还没有注册和登陆，不能创建App.
    at Error (native)
    at /xmgc_main/my_modules/fns.js:225:56
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._fns.getUidByLogin (/xmgc_main/my_modules/fns.js:222:14)
    at /xmgc_main/my_modules/rotr.js:83:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
API RECV: login1
> ERR:
Error: 您还没有注册和登陆，不能创建App.
    at Error (native)
    at /xmgc_main/my_modules/fns.js:225:56
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._fns.getUidByLogin (/xmgc_main/my_modules/fns.js:222:14)
    at /xmgc_main/my_modules/rotr.js:83:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
API RECV: login1
> ERR:
Error: 您还没有注册和登陆，不能创建App.
    at Error (native)
    at /xmgc_main/my_modules/fns.js:225:56
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._fns.getUidByLogin (/xmgc_main/my_modules/fns.js:222:14)
    at /xmgc_main/my_modules/rotr.js:83:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
API RECV: login1
> ERR:
Error: 您还没有注册和登陆，不能创建App.
    at Error (native)
    at /xmgc_main/my_modules/fns.js:225:56
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._fns.getUidByLogin (/xmgc_main/my_modules/fns.js:222:14)
    at /xmgc_main/my_modules/rotr.js:83:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
API RECV: register
> ERR:
Error: 您还没有注册和登陆，不能创建App.
    at Error (native)
    at /xmgc_main/my_modules/fns.js:260:56
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
    at Object._fns.getUidByregister (/xmgc_main/my_modules/fns.js:257:14)
    at /xmgc_main/my_modules/rotr.js:94:30
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '18861304637',
    sex: '男',
    address: '啊啊啊',
    idNumber: '11111',
    phoneNumber: '111',
    email: '1111',
    headImage: null,
    company: '1111',
    selfIntroduction: '1111',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: settingPage
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '18861304637',
    sex: '男',
    address: '啊啊啊',
    idNumber: '11111',
    phoneNumber: '111',
    email: '1111',
    headImage: null,
    company: '1111',
    selfIntroduction: '1111',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: reg
{ id: '34', phone: '155******20', nick: 'lihx' }
insert into userdata set  userId='34', userName='155******20'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '34' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: reg
{ id: '34', phone: '155******20', nick: 'lihx' }
insert into userdata set  userId='34', userName='155******20'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '34' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: reg
{ id: '34', phone: '155******20', nick: 'lihx' }
insert into userdata set  userId='34', userName='155******20'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '34' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userId='34'
[ RowDataPacket {
    userId: 34,
    userPwd: null,
    userName: '15517724520',
    sex: '女',
    address: '河南商丘',
    idNumber: '411423',
    phoneNumber: '1551772',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '2' } ]
API RECV: question1
> ERR:
Error: ER_BAD_FIELD_ERROR: Unknown column 'undefined' in 'where clause'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:249:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: question1
> ERR:
Error: ER_BAD_FIELD_ERROR: Unknown column 'undefined' in 'where clause'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:249:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userId='49'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '18261383871',
    sex: '男',
    address: '啦啦啦',
    idNumber: '萨达',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: questionlist
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:68:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '18861304637',
    sex: '男',
    address: '啊啊啊',
    idNumber: '11111',
    phoneNumber: '111',
    email: '1111',
    headImage: null,
    company: '1111',
    selfIntroduction: '1111',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: settingPage
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '18861304637',
    sex: '男',
    address: '啊啊啊',
    idNumber: '11111',
    phoneNumber: '111',
    email: '1111',
    headImage: null,
    company: '1111',
    selfIntroduction: '1111',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
/xmgc_main/my_modules/rotr.js:58
userId1=yield _fns.getUidByCtx(ctx);
              ^^^^

SyntaxError: Unexpected identifier
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:373:25)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
    at Module.require (module.js:353:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/xmgc_main/_app.js:22:16)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
/xmgc_main/my_modules/rotr.js:58
userId1=yield _fns.getUidByCtx(ctx);
              ^^^^

SyntaxError: Unexpected identifier
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:373:25)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
    at Module.require (module.js:353:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/xmgc_main/_app.js:22:16)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
> INFO:
Server is running on:8000!
events.js:141
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::8000
    at Object.exports._errnoException (util.js:907:11)
    at exports._exceptionWithHostPort (util.js:930:20)
    at Server._listen2 (net.js:1250:14)
    at listen (net.js:1286:10)
    at Server.listen (net.js:1382:5)
    at /xmgc_main/_app.js:31:18
    at Object.<anonymous> (/xmgc_main/_app.js:33:3)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
> INFO:
Server is running on:8000!
events.js:141
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::8000
    at Object.exports._errnoException (util.js:907:11)
    at exports._exceptionWithHostPort (util.js:930:20)
    at Server._listen2 (net.js:1250:14)
    at listen (net.js:1286:10)
    at Server.listen (net.js:1382:5)
    at /xmgc_main/_app.js:31:18
    at Object.<anonymous> (/xmgc_main/_app.js:33:3)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
> INFO:
Server is running on:8000!
> INFO:
Server is running on:8000!
> INFO:
Server is running on:8000!
> INFO:
Server is running on:8000!
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: touxiang
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:560:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: touxiang
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:560:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: touxiang
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:560:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: touxiang
> ERR:
Error: ER_DATA_TOO_LONG: Data too long for column 'headImage' at row 1
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:560:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: touxiang
> ERR:
Error: ER_DATA_TOO_LONG: Data too long for column 'headImage' at row 1
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:560:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: touxiang
> ERR:
Error: ER_DATA_TOO_LONG: Data too long for column 'headImage' at row 1
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:560:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: touxiang
> ERR:
Error: ER_DATA_TOO_LONG: Data too long for column 'headImage' at row 1
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:560:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: touxiang
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:560:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: touxiang
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:560:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: touxiang
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:560:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: reg
{ id: '28', phone: '182******92', nick: 'fei' }
insert into userdata set  userId='28', userName='182******92'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '28' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
28
select * from userdata where userId='28'
[ RowDataPacket {
    userId: 28,
    userPwd: null,
    userName: '我就是糖棒棒，哼哼',
    sex: '',
    address: '',
    idNumber: '',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: null,
    manager: null,
    goldNum: 100,
    levelId: null } ]
API RECV: settingPage
28
select * from userdata where userId='28'
[ RowDataPacket {
    userId: 28,
    userPwd: null,
    userName: '我就是糖棒棒，哼哼',
    sex: '',
    address: '',
    idNumber: '',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: null,
    manager: null,
    goldNum: 100,
    levelId: null } ]
API RECV: touxiang
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '28' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:560:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
> INFO:
Server is running on:8000!
API RECV: settingPage
28
select * from userdata where userId='28'
[ RowDataPacket {
    userId: 28,
    userPwd: null,
    userName: '我就是糖棒棒，哼哼',
    sex: '',
    address: '',
    idNumber: '',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: null,
    manager: null,
    goldNum: 100,
    levelId: null } ]
API RECV: settingPage
28
select * from userdata where userId='28'
[ RowDataPacket {
    userId: 28,
    userPwd: null,
    userName: '我就是糖棒棒，哼哼',
    sex: '',
    address: '',
    idNumber: '',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: null,
    manager: null,
    goldNum: 100,
    levelId: null } ]
API RECV: touxiang
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '28' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:558:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: settingPage
28
select * from userdata where userId='28'
[ RowDataPacket {
    userId: 28,
    userPwd: null,
    userName: '我就是糖棒棒，哼哼',
    sex: '',
    address: '',
    idNumber: '',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: null,
    manager: null,
    goldNum: 100,
    levelId: null } ]
API RECV: touxiang
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '28' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:558:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: touxiang
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:558:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: touxiang
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:558:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: touxiang
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:558:25
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: settingPage
28
select * from userdata where userId='28'
[ RowDataPacket {
    userId: 28,
    userPwd: null,
    userName: '我就是糖棒棒，哼哼',
    sex: '',
    address: '',
    idNumber: '',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: null,
    manager: null,
    goldNum: 100,
    levelId: null } ]
API RECV: resetInfoPage
update userdata set userName='我就是糖棒棒，哼哼',sex='',address='',idNumber='',phoneNumber='',email='',company='',selfIntroduction='' where userId='28'
API RECV: settingPage
28
select * from userdata where userId='28'
[ RowDataPacket {
    userId: 28,
    userPwd: null,
    userName: '我就是糖棒棒，哼哼',
    sex: '',
    address: '',
    idNumber: '',
    phoneNumber: '',
    email: '',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: null,
    manager: null,
    goldNum: 100,
    levelId: null } ]
API RECV: settingPage
22
select * from userdata where userId='22'
[ RowDataPacket {
    userId: 22,
    userPwd: null,
    userName: '风清扬',
    sex: '男',
    address: '火星',
    idNumber: '12345678',
    phoneNumber: '18861304637',
    email: '983813676@qq.com',
    headImage: null,
    company: '高博',
    selfIntroduction: '人总是要有梦想的，万一实现了呢',
    experts: 1,
    manager: null,
    goldNum: null,
    levelId: '1' } ]
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
49
select * from userdata where userId='49'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '不羁放纵，力',
    sex: '男',
    address: '德玛西亚',
    idNumber: '12345648789415646546',
    phoneNumber: '12312121',
    email: '123212313232',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: settingPage
49
select * from userdata where userId='49'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '不羁放纵，力',
    sex: '男',
    address: '德玛西亚',
    idNumber: '12345648789415646546',
    phoneNumber: '12312121',
    email: '123212313232',
    headImage: null,
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
> INFO:
Server is running on:8000!
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 []
API RECV: question1
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    headImage: null,
    resId: 5,
    resContent: 'eee',
    userName: '13218027916',
    resDate: null,
    zan: 4,
    cai: 1 } ]
API RECV: question1
API RECV: caicai
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: caicai
undefined
API RECV: question111
1111
1112
5
select userId,resId from zancai where userId=22 and resId='5'
1115
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/Fs6mBWtj7b4xs2Cjtmq-Lv02Wi8t',
    resId: 70,
    resContent: '是',
    userName: '我是小小小纯男',
    resDate: '2016-10-8 21时5分43秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FlvBnUM_oKFD41RRLGb0aDkURoO6',
    resId: 73,
    resContent: '人家只是老司机而已~~~~',
    userName: '全球老刘后援会-会长',
    resDate: '2016-10-8 21时41分55秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvqDCRCH3REluxUlq4x6no7CTn5Z',
    resId: 72,
    resContent: '这个回答虽然只有一个字但很客观全面科学又真实，形象生动通俗易懂地表达了全班同学的心声',
    userName: '瑞哥',
    resDate: '2016-10-8 21时12分30秒',
    zan: 2,
    cai: 1 } ]
API RECV: caicai
undefined
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/Fs6mBWtj7b4xs2Cjtmq-Lv02Wi8t',
    resId: 70,
    resContent: '是',
    userName: '我是小小小纯男',
    resDate: '2016-10-8 21时5分43秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FlvBnUM_oKFD41RRLGb0aDkURoO6',
    resId: 73,
    resContent: '人家只是老司机而已~~~~',
    userName: '全球老刘后援会-会长',
    resDate: '2016-10-8 21时41分55秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvqDCRCH3REluxUlq4x6no7CTn5Z',
    resId: 72,
    resContent: '这个回答虽然只有一个字但很客观全面科学又真实，形象生动通俗易懂地表达了全班同学的心声',
    userName: '瑞哥',
    resDate: '2016-10-8 21时12分30秒',
    zan: 2,
    cai: 1 } ]
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('呵呵呵呵呵呵呵呵','2016-10-9 8时26分5秒','22','124')
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/Fs6mBWtj7b4xs2Cjtmq-Lv02Wi8t',
    resId: 70,
    resContent: '是',
    userName: '我是小小小纯男',
    resDate: '2016-10-8 21时5分43秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FlvBnUM_oKFD41RRLGb0aDkURoO6',
    resId: 73,
    resContent: '人家只是老司机而已~~~~',
    userName: '全球老刘后援会-会长',
    resDate: '2016-10-8 21时41分55秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvqDCRCH3REluxUlq4x6no7CTn5Z',
    resId: 72,
    resContent: '这个回答虽然只有一个字但很客观全面科学又真实，形象生动通俗易懂地表达了全班同学的心声',
    userName: '瑞哥',
    resDate: '2016-10-8 21时12分30秒',
    zan: 2,
    cai: 1 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvwZm-XMf5USIxM6d18qO5e40x72',
    resId: 75,
    resContent: '呵呵呵呵呵呵呵呵',
    userName: '风清扬',
    resDate: '2016-10-9 8时26分5秒',
    zan: 0,
    cai: 0 } ]
API RECV: question111
1111
1112
75
select userId,resId from zancai where userId=22 and resId='75'
1115
1116
1117
1118
API RECV: question111
1111
1112
75
select userId,resId from zancai where userId=22 and resId='75'
1115
API RECV: questionlist

  Error: 您还没有注册和登陆，不能创建App.
      at Error (native)
      at /xmgc_main/my_modules/fns.js:194:56
      at next (native)
      at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
      at /xmgc_main/node_modules/co/index.js:54:5
      at co (/xmgc_main/node_modules/co/index.js:50:10)
      at Object._fns.getUidByCtx (/xmgc_main/my_modules/fns.js:190:14)
      at Object.apihandler (/xmgc_main/my_modules/rotr.js:25:21)
      at next (native)
      at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)


  Error: 您还没有注册和登陆，不能创建App.
      at Error (native)
      at /xmgc_main/my_modules/fns.js:194:56
      at next (native)
      at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
      at /xmgc_main/node_modules/co/index.js:54:5
      at co (/xmgc_main/node_modules/co/index.js:50:10)
      at Object._fns.getUidByCtx (/xmgc_main/my_modules/fns.js:190:14)
      at Object.apihandler (/xmgc_main/my_modules/rotr.js:25:21)
      at next (native)
      at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)


  Error: 您还没有注册和登陆，不能创建App.
      at Error (native)
      at /xmgc_main/my_modules/fns.js:194:56
      at next (native)
      at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
      at /xmgc_main/node_modules/co/index.js:54:5
      at co (/xmgc_main/node_modules/co/index.js:50:10)
      at Object._fns.getUidByCtx (/xmgc_main/my_modules/fns.js:190:14)
      at Object.apihandler (/xmgc_main/my_modules/rotr.js:25:21)
      at next (native)
      at Object.dispatch (/xmgc_main/node_modules/koa-router/lib/router.js:336:14)

API RECV: reg
{ id: '53', phone: '177******67', nick: '崔广瑞' }
insert into userdata set  userId='53', userName='177******67'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '53' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/Fs6mBWtj7b4xs2Cjtmq-Lv02Wi8t',
    resId: 70,
    resContent: '是',
    userName: '我是小小小纯男',
    resDate: '2016-10-8 21时5分43秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FlvBnUM_oKFD41RRLGb0aDkURoO6',
    resId: 73,
    resContent: '人家只是老司机而已~~~~',
    userName: '全球老刘后援会-会长',
    resDate: '2016-10-8 21时41分55秒',
    zan: 3,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvqDCRCH3REluxUlq4x6no7CTn5Z',
    resId: 72,
    resContent: '这个回答虽然只有一个字但很客观全面科学又真实，形象生动通俗易懂地表达了全班同学的心声',
    userName: '瑞哥',
    resDate: '2016-10-8 21时12分30秒',
    zan: 2,
    cai: 1 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvwZm-XMf5USIxM6d18qO5e40x72',
    resId: 75,
    resContent: '呵呵呵呵呵呵呵呵',
    userName: '风清扬',
    resDate: '2016-10-9 8时26分5秒',
    zan: 1,
    cai: 0 } ]
API RECV: question1
API RECV: question111
1111
1112
70
select userId,resId from zancai where userId=53 and resId='70'
1115
1116
1117
1118
API RECV: question111
1111
1112
73
select userId,resId from zancai where userId=53 and resId='73'
1115
1116
1117
1118
API RECV: question111
1111
1112
72
select userId,resId from zancai where userId=53 and resId='72'
1115
1116
1117
1118
API RECV: question111
1111
1112
75
select userId,resId from zancai where userId=53 and resId='75'
1115
1116
1117
1118
API RECV: question111
1111
1112
70
select userId,resId from zancai where userId=53 and resId='70'
1115
API RECV: question111
1111
1112
70
select userId,resId from zancai where userId=53 and resId='70'
1115
API RECV: question111
1111
1112
70
select userId,resId from zancai where userId=53 and resId='70'
1115
API RECV: caicai
undefined
API RECV: question111
1111
1112
70
select userId,resId from zancai where userId=53 and resId='70'
1115
API RECV: caicai
undefined
API RECV: caicai
undefined
API RECV: caicai
undefined
API RECV: caicai
undefined
API RECV: caicai
undefined
API RECV: caicai
undefined
API RECV: question111
1111
1112
72
select userId,resId from zancai where userId=53 and resId='72'
1115
API RECV: question111
1111
1112
72
select userId,resId from zancai where userId=53 and resId='72'
1115
API RECV: reg
{ id: '34', phone: '155******20', nick: 'lihx' }
insert into userdata set  userId='34', userName='155******20'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '34' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
34
select * from userdata where userId='34'
[ RowDataPacket {
    userId: 34,
    userPwd: null,
    userName: '商一姐',
    sex: '男',
    address: '河南省请选择城市/地区',
    idNumber: '111111111111111x',
    phoneNumber: '11111111111',
    email: '11@qq.com',
    headImage: 'undefined',
    company: '',
    selfIntroduction: '',
    experts: 1,
    manager: null,
    goldNum: 600,
    levelId: '2' } ]
API RECV: touxiang
API RECV: reg
{ id: '53', phone: '177******67', nick: '崔广瑞' }
insert into userdata set  userId='53', userName='177******67'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '53' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
34
select * from userdata where userId='34'
[ RowDataPacket {
    userId: 34,
    userPwd: null,
    userName: '商一姐',
    sex: '男',
    address: '河南省郑州市',
    idNumber: '11111111111111X',
    phoneNumber: '11111111111',
    email: '11@qq.com',
    headImage: 'undefined',
    company: '',
    selfIntroduction: '',
    experts: 1,
    manager: null,
    goldNum: 600,
    levelId: '2' } ]
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/Fs6mBWtj7b4xs2Cjtmq-Lv02Wi8t',
    resId: 70,
    resContent: '是',
    userName: '我是小小小纯男',
    resDate: '2016-10-8 21时5分43秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FlvBnUM_oKFD41RRLGb0aDkURoO6',
    resId: 73,
    resContent: '人家只是老司机而已~~~~',
    userName: '全球老刘后援会-会长',
    resDate: '2016-10-8 21时41分55秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvqDCRCH3REluxUlq4x6no7CTn5Z',
    resId: 72,
    resContent: '这个回答虽然只有一个字但很客观全面科学又真实，形象生动通俗易懂地表达了全班同学的心声',
    userName: '瑞哥',
    resDate: '2016-10-8 21时12分30秒',
    zan: 3,
    cai: 1 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvwZm-XMf5USIxM6d18qO5e40x72',
    resId: 75,
    resContent: '呵呵呵呵呵呵呵呵',
    userName: '风清扬',
    resDate: '2016-10-9 8时26分5秒',
    zan: 2,
    cai: 0 } ]
API RECV: question1
API RECV: touxiang
API RECV: question111
1111
1112
75
select userId,resId from zancai where userId=53 and resId='75'
1115
API RECV: question111
1111
1112
72
select userId,resId from zancai where userId=53 and resId='72'
1115
API RECV: question111
1111
1112
73
select userId,resId from zancai where userId=53 and resId='73'
1115
API RECV: question111
1111
1112
70
select userId,resId from zancai where userId=53 and resId='70'
1115
API RECV: question111
1111
1112
70
select userId,resId from zancai where userId=53 and resId='70'
1115
API RECV: question111
1111
1112
70
select userId,resId from zancai where userId=53 and resId='70'
1115
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvwZm-XMf5USIxM6d18qO5e40x72',
    resId: 69,
    resContent: '1111111111111',
    userName: '风清扬',
    resDate: '2016-10-8 21时2分16秒',
    zan: 0,
    cai: 0 } ]
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    headImage: null,
    resId: 54,
    resContent: '不是，我也不信\n',
    userName: '184******30',
    resDate: '2016-9-29 20时52分7秒',
    zan: 106,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FlvBnUM_oKFD41RRLGb0aDkURoO6',
    resId: 52,
    resContent: '是菲',
    userName: '全球老刘后援会-会长',
    resDate: '2016-9-29 20时49分21秒',
    zan: 11,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/Fs6mBWtj7b4xs2Cjtmq-Lv02Wi8t',
    resId: 51,
    resContent: '是啊啊',
    userName: '我是小小小纯男',
    resDate: '2016-9-29 20时49分19秒',
    zan: 10,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvwZm-XMf5USIxM6d18qO5e40x72',
    resId: 47,
    resContent: '还用问吗，肯定是啊，这问题问的',
    userName: '风清扬',
    resDate: '2016-9-29 20时44分58秒',
    zan: 7,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/Fs6mBWtj7b4xs2Cjtmq-Lv02Wi8t',
    resId: 65,
    resContent: '',
    userName: '我是小小小纯男',
    resDate: '2016-10-8 20时10分19秒',
    zan: 0,
    cai: 0 } ]
> INFO:
Server is running on:8000!
> INFO:
Server is running on:8000!
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: question
insert into userquestion(questionTitle,userId,gold1,directionId,questionDate,questionContent) values ('i欸iii','22','1','1','2016-10-9 16时9分10秒','顶顶顶')
API RECV: questionlist
API RECV: topicPage
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: questionlist
API RECV: topicPage
API RECV: questionlist
API RECV: questionlist
API RECV: topicPage
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/Fs6mBWtj7b4xs2Cjtmq-Lv02Wi8t',
    resId: 70,
    resContent: '是',
    userName: '我是小小小纯男',
    resDate: '2016-10-8 21时5分43秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FlvBnUM_oKFD41RRLGb0aDkURoO6',
    resId: 73,
    resContent: '人家只是老司机而已~~~~',
    userName: '全球老刘后援会-会长',
    resDate: '2016-10-8 21时41分55秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvqDCRCH3REluxUlq4x6no7CTn5Z',
    resId: 72,
    resContent: '这个回答虽然只有一个字但很客观全面科学又真实，形象生动通俗易懂地表达了全班同学的心声',
    userName: '瑞哥',
    resDate: '2016-10-8 21时12分30秒',
    zan: 3,
    cai: 1 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvwZm-XMf5USIxM6d18qO5e40x72',
    resId: 75,
    resContent: '呵呵呵呵呵呵呵呵',
    userName: '风清扬',
    resDate: '2016-10-9 8时26分5秒',
    zan: 2,
    cai: 0 } ]
API RECV: questionlist
API RECV: reg
{ id: '22', phone: '188******37' }
insert into userdata set  userId='22', userName='188******37'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '22' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: topicPage
API RECV: answerlist
API RECV: question1
数据库查询数据 []
API RECV: response
insert into response(resContent,resDate,userId,questionId) values ('啊啊啊啊啊啊啊','2016-10-9 16时12分21秒','22','126')
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvwZm-XMf5USIxM6d18qO5e40x72',
    resId: 76,
    resContent: '啊啊啊啊啊啊啊',
    userName: '风清扬',
    resDate: '2016-10-9 16时12分21秒',
    zan: 0,
    cai: 0 } ]
API RECV: caicai
OkPacket {
  fieldCount: 0,
  affectedRows: 1,
  insertId: 0,
  serverStatus: 2,
  warningCount: 0,
  message: '(Rows matched: 1  Changed: 1  Warnings: 0',
  protocol41: true,
  changedRows: 1 }
API RECV: caicai
undefined
API RECV: question111
1111
1112
76
select userId,resId from zancai where userId=22 and resId='76'
1115
API RECV: questionlist
API RECV: reg
{ id: '49', phone: '182******71' }
insert into userdata set  userId='49', userName='182******71'
> ERR:
Error: ER_DUP_ENTRY: Duplicate entry '49' for key 'PRIMARY'
    at Query.Sequence._packetToError (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Sequence.js:51:14)
    at Query.ErrorPacket (/xmgc_main/node_modules/mysql/lib/protocol/sequences/Query.js:83:18)
    at Protocol._parsePacket (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:280:23)
    at Parser.write (/xmgc_main/node_modules/mysql/lib/protocol/Parser.js:74:12)
    at Protocol.write (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/xmgc_main/node_modules/mysql/lib/Connection.js:109:28)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:153:18)
    at Socket.Readable.push (_stream_readable.js:111:10)
    at TCP.onread (net.js:536:20)
    --------------------
    at Protocol._enqueue (/xmgc_main/node_modules/mysql/lib/protocol/Protocol.js:141:48)
    at Connection.query (/xmgc_main/node_modules/mysql/lib/Connection.js:214:25)
    at /xmgc_main/my_modules/ctnu.js:109:29
    at genRedisRes (/xmgc_main/my_modules/ctnu.js:108:15)
    at _ctnu.ctnu (/xmgc_main/my_modules/ctnu.js:21:15)
    at /xmgc_main/my_modules/rotr.js:67:24
    at next (native)
    at onFulfilled (/xmgc_main/node_modules/co/index.js:65:19)
    at /xmgc_main/node_modules/co/index.js:54:5
    at co (/xmgc_main/node_modules/co/index.js:50:10)
API RECV: questionlist
API RECV: settingPage
49
select * from userdata where userId='49'
[ RowDataPacket {
    userId: 49,
    userPwd: null,
    userName: '我是小小小纯男',
    sex: '男',
    address: '哈哈哈哈',
    idNumber: '12345648789415646546',
    phoneNumber: '12312121',
    email: '123212313232',
    headImage: 'http://files.m.xmgc360.com/Fs6mBWtj7b4xs2Cjtmq-Lv02Wi8t',
    company: '',
    selfIntroduction: '',
    experts: 0,
    manager: null,
    goldNum: null,
    levelId: '' } ]
API RECV: questionlist
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: topicPage
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/Fs6mBWtj7b4xs2Cjtmq-Lv02Wi8t',
    resId: 70,
    resContent: '是',
    userName: '我是小小小纯男',
    resDate: '2016-10-8 21时5分43秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FlvBnUM_oKFD41RRLGb0aDkURoO6',
    resId: 73,
    resContent: '人家只是老司机而已~~~~',
    userName: '全球老刘后援会-会长',
    resDate: '2016-10-8 21时41分55秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvqDCRCH3REluxUlq4x6no7CTn5Z',
    resId: 72,
    resContent: '这个回答虽然只有一个字但很客观全面科学又真实，形象生动通俗易懂地表达了全班同学的心声',
    userName: '瑞哥',
    resDate: '2016-10-8 21时12分30秒',
    zan: 3,
    cai: 1 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvwZm-XMf5USIxM6d18qO5e40x72',
    resId: 75,
    resContent: '呵呵呵呵呵呵呵呵',
    userName: '风清扬',
    resDate: '2016-10-9 8时26分5秒',
    zan: 2,
    cai: 0 } ]
API RECV: question1
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/Fs6mBWtj7b4xs2Cjtmq-Lv02Wi8t',
    resId: 70,
    resContent: '是',
    userName: '我是小小小纯男',
    resDate: '2016-10-8 21时5分43秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FlvBnUM_oKFD41RRLGb0aDkURoO6',
    resId: 73,
    resContent: '人家只是老司机而已~~~~',
    userName: '全球老刘后援会-会长',
    resDate: '2016-10-8 21时41分55秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvqDCRCH3REluxUlq4x6no7CTn5Z',
    resId: 72,
    resContent: '这个回答虽然只有一个字但很客观全面科学又真实，形象生动通俗易懂地表达了全班同学的心声',
    userName: '瑞哥',
    resDate: '2016-10-8 21时12分30秒',
    zan: 3,
    cai: 1 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvwZm-XMf5USIxM6d18qO5e40x72',
    resId: 75,
    resContent: '呵呵呵呵呵呵呵呵',
    userName: '风清扬',
    resDate: '2016-10-9 8时26分5秒',
    zan: 2,
    cai: 0 } ]
API RECV: answerlist
API RECV: question1
数据库查询数据 [ RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/Fs6mBWtj7b4xs2Cjtmq-Lv02Wi8t',
    resId: 70,
    resContent: '是',
    userName: '我是小小小纯男',
    resDate: '2016-10-8 21时5分43秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FlvBnUM_oKFD41RRLGb0aDkURoO6',
    resId: 73,
    resContent: '人家只是老司机而已~~~~',
    userName: '全球老刘后援会-会长',
    resDate: '2016-10-8 21时41分55秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvqDCRCH3REluxUlq4x6no7CTn5Z',
    resId: 72,
    resContent: '这个回答虽然只有一个字但很客观全面科学又真实，形象生动通俗易懂地表达了全班同学的心声',
    userName: '瑞哥',
    resDate: '2016-10-8 21时12分30秒',
    zan: 3,
    cai: 1 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvwZm-XMf5USIxM6d18qO5e40x72',
    resId: 75,
    resContent: '呵呵呵呵呵呵呵呵',
    userName: '风清扬',
    resDate: '2016-10-9 8时26分5秒',
    zan: 2,
    cai: 0 } ]
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/Fs6mBWtj7b4xs2Cjtmq-Lv02Wi8t',
    resId: 70,
    resContent: '是',
    userName: '我是小小小纯男',
    resDate: '2016-10-8 21时5分43秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FlvBnUM_oKFD41RRLGb0aDkURoO6',
    resId: 73,
    resContent: '人家只是老司机而已~~~~',
    userName: '全球老刘后援会-会长',
    resDate: '2016-10-8 21时41分55秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvqDCRCH3REluxUlq4x6no7CTn5Z',
    resId: 72,
    resContent: '这个回答虽然只有一个字但很客观全面科学又真实，形象生动通俗易懂地表达了全班同学的心声',
    userName: '瑞哥',
    resDate: '2016-10-8 21时12分30秒',
    zan: 3,
    cai: 1 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvwZm-XMf5USIxM6d18qO5e40x72',
    resId: 75,
    resContent: '呵呵呵呵呵呵呵呵',
    userName: '风清扬',
    resDate: '2016-10-9 8时26分5秒',
    zan: 2,
    cai: 0 } ]
API RECV: question1
API RECV: answerlist
数据库查询数据 [ RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/Fs6mBWtj7b4xs2Cjtmq-Lv02Wi8t',
    resId: 70,
    resContent: '是',
    userName: '我是小小小纯男',
    resDate: '2016-10-8 21时5分43秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FlvBnUM_oKFD41RRLGb0aDkURoO6',
    resId: 73,
    resContent: '人家只是老司机而已~~~~',
    userName: '全球老刘后援会-会长',
    resDate: '2016-10-8 21时41分55秒',
    zan: 4,
    cai: 0 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvqDCRCH3REluxUlq4x6no7CTn5Z',
    resId: 72,
    resContent: '这个回答虽然只有一个字但很客观全面科学又真实，形象生动通俗易懂地表达了全班同学的心声',
    userName: '瑞哥',
    resDate: '2016-10-8 21时12分30秒',
    zan: 3,
    cai: 1 },
  RowDataPacket {
    headImage: 'http://files.m.xmgc360.com/FvwZm-XMf5USIxM6d18qO5e40x72',
    resId: 75,
    resContent: '呵呵呵呵呵呵呵呵',
    userName: '风清扬',
    resDate: '2016-10-9 8时26分5秒',
    zan: 2,
    cai: 0 } ]
